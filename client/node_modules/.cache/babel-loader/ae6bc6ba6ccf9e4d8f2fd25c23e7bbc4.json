{"ast":null,"code":"import { string as locale } from './locale';\nimport isAbsent from './util/isAbsent';\nimport BaseSchema from './schema'; // eslint-disable-next-line\n\nlet rEmail = /^((([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))$/i; // eslint-disable-next-line\n\nlet rUrl = /^((https?|ftp):)?\\/\\/(((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:)*@)?(((\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5]))|((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.?)(:\\d*)?)(\\/((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)+(\\/(([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)*)*)?)?(\\?((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|[\\uE000-\\uF8FF]|\\/|\\?)*)?(\\#((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|\\/|\\?)*)?$/i; // eslint-disable-next-line\n\nlet rUUID = /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;\n\nlet isTrimmed = value => isAbsent(value) || value === value.trim();\n\nlet objStringTag = {}.toString();\nexport function create() {\n  return new StringSchema();\n}\nexport default class StringSchema extends BaseSchema {\n  constructor() {\n    super({\n      type: 'string'\n    });\n    this.withMutation(() => {\n      this.transform(function (value) {\n        if (this.isType(value)) return value;\n        if (Array.isArray(value)) return value;\n        const strValue = value != null && value.toString ? value.toString() : value;\n        if (strValue === objStringTag) return value;\n        return strValue;\n      });\n    });\n  }\n\n  _typeCheck(value) {\n    if (value instanceof String) value = value.valueOf();\n    return typeof value === 'string';\n  }\n\n  _isPresent(value) {\n    return super._isPresent(value) && !!value.length;\n  }\n\n  length(length, message = locale.length) {\n    return this.test({\n      message,\n      name: 'length',\n      exclusive: true,\n      params: {\n        length\n      },\n\n      test(value) {\n        return isAbsent(value) || value.length === this.resolve(length);\n      }\n\n    });\n  }\n\n  min(min, message = locale.min) {\n    return this.test({\n      message,\n      name: 'min',\n      exclusive: true,\n      params: {\n        min\n      },\n\n      test(value) {\n        return isAbsent(value) || value.length >= this.resolve(min);\n      }\n\n    });\n  }\n\n  max(max, message = locale.max) {\n    return this.test({\n      name: 'max',\n      exclusive: true,\n      message,\n      params: {\n        max\n      },\n\n      test(value) {\n        return isAbsent(value) || value.length <= this.resolve(max);\n      }\n\n    });\n  }\n\n  matches(regex, options) {\n    let excludeEmptyString = false;\n    let message;\n    let name;\n\n    if (options) {\n      if (typeof options === 'object') {\n        ({\n          excludeEmptyString = false,\n          message,\n          name\n        } = options);\n      } else {\n        message = options;\n      }\n    }\n\n    return this.test({\n      name: name || 'matches',\n      message: message || locale.matches,\n      params: {\n        regex\n      },\n      test: value => isAbsent(value) || value === '' && excludeEmptyString || value.search(regex) !== -1\n    });\n  }\n\n  email(message = locale.email) {\n    return this.matches(rEmail, {\n      name: 'email',\n      message,\n      excludeEmptyString: true\n    });\n  }\n\n  url(message = locale.url) {\n    return this.matches(rUrl, {\n      name: 'url',\n      message,\n      excludeEmptyString: true\n    });\n  }\n\n  uuid(message = locale.uuid) {\n    return this.matches(rUUID, {\n      name: 'uuid',\n      message,\n      excludeEmptyString: false\n    });\n  } //-- transforms --\n\n\n  ensure() {\n    return this.default('').transform(val => val === null ? '' : val);\n  }\n\n  trim(message = locale.trim) {\n    return this.transform(val => val != null ? val.trim() : val).test({\n      message,\n      name: 'trim',\n      test: isTrimmed\n    });\n  }\n\n  lowercase(message = locale.lowercase) {\n    return this.transform(value => !isAbsent(value) ? value.toLowerCase() : value).test({\n      message,\n      name: 'string_case',\n      exclusive: true,\n      test: value => isAbsent(value) || value === value.toLowerCase()\n    });\n  }\n\n  uppercase(message = locale.uppercase) {\n    return this.transform(value => !isAbsent(value) ? value.toUpperCase() : value).test({\n      message,\n      name: 'string_case',\n      exclusive: true,\n      test: value => isAbsent(value) || value === value.toUpperCase()\n    });\n  }\n\n}\ncreate.prototype = StringSchema.prototype; //\n// String Interfaces\n//","map":{"version":3,"sources":["/home/jun/foodbank/node_modules/yup/es/string.js"],"names":["string","locale","isAbsent","BaseSchema","rEmail","rUrl","rUUID","isTrimmed","value","trim","objStringTag","toString","create","StringSchema","constructor","type","withMutation","transform","isType","Array","isArray","strValue","_typeCheck","String","valueOf","_isPresent","length","message","test","name","exclusive","params","resolve","min","max","matches","regex","options","excludeEmptyString","search","email","url","uuid","ensure","default","val","lowercase","toLowerCase","uppercase","toUpperCase","prototype"],"mappings":"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","sourcesContent":["import { string as locale } from './locale';\nimport isAbsent from './util/isAbsent';\nimport BaseSchema from './schema'; // eslint-disable-next-line\n\nlet rEmail = /^((([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))$/i; // eslint-disable-next-line\n\nlet rUrl = /^((https?|ftp):)?\\/\\/(((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:)*@)?(((\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5]))|((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.?)(:\\d*)?)(\\/((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)+(\\/(([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)*)*)?)?(\\?((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|[\\uE000-\\uF8FF]|\\/|\\?)*)?(\\#((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|\\/|\\?)*)?$/i; // eslint-disable-next-line\n\nlet rUUID = /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;\n\nlet isTrimmed = value => isAbsent(value) || value === value.trim();\n\nlet objStringTag = {}.toString();\nexport function create() {\n  return new StringSchema();\n}\nexport default class StringSchema extends BaseSchema {\n  constructor() {\n    super({\n      type: 'string'\n    });\n    this.withMutation(() => {\n      this.transform(function (value) {\n        if (this.isType(value)) return value;\n        if (Array.isArray(value)) return value;\n        const strValue = value != null && value.toString ? value.toString() : value;\n        if (strValue === objStringTag) return value;\n        return strValue;\n      });\n    });\n  }\n\n  _typeCheck(value) {\n    if (value instanceof String) value = value.valueOf();\n    return typeof value === 'string';\n  }\n\n  _isPresent(value) {\n    return super._isPresent(value) && !!value.length;\n  }\n\n  length(length, message = locale.length) {\n    return this.test({\n      message,\n      name: 'length',\n      exclusive: true,\n      params: {\n        length\n      },\n\n      test(value) {\n        return isAbsent(value) || value.length === this.resolve(length);\n      }\n\n    });\n  }\n\n  min(min, message = locale.min) {\n    return this.test({\n      message,\n      name: 'min',\n      exclusive: true,\n      params: {\n        min\n      },\n\n      test(value) {\n        return isAbsent(value) || value.length >= this.resolve(min);\n      }\n\n    });\n  }\n\n  max(max, message = locale.max) {\n    return this.test({\n      name: 'max',\n      exclusive: true,\n      message,\n      params: {\n        max\n      },\n\n      test(value) {\n        return isAbsent(value) || value.length <= this.resolve(max);\n      }\n\n    });\n  }\n\n  matches(regex, options) {\n    let excludeEmptyString = false;\n    let message;\n    let name;\n\n    if (options) {\n      if (typeof options === 'object') {\n        ({\n          excludeEmptyString = false,\n          message,\n          name\n        } = options);\n      } else {\n        message = options;\n      }\n    }\n\n    return this.test({\n      name: name || 'matches',\n      message: message || locale.matches,\n      params: {\n        regex\n      },\n      test: value => isAbsent(value) || value === '' && excludeEmptyString || value.search(regex) !== -1\n    });\n  }\n\n  email(message = locale.email) {\n    return this.matches(rEmail, {\n      name: 'email',\n      message,\n      excludeEmptyString: true\n    });\n  }\n\n  url(message = locale.url) {\n    return this.matches(rUrl, {\n      name: 'url',\n      message,\n      excludeEmptyString: true\n    });\n  }\n\n  uuid(message = locale.uuid) {\n    return this.matches(rUUID, {\n      name: 'uuid',\n      message,\n      excludeEmptyString: false\n    });\n  } //-- transforms --\n\n\n  ensure() {\n    return this.default('').transform(val => val === null ? '' : val);\n  }\n\n  trim(message = locale.trim) {\n    return this.transform(val => val != null ? val.trim() : val).test({\n      message,\n      name: 'trim',\n      test: isTrimmed\n    });\n  }\n\n  lowercase(message = locale.lowercase) {\n    return this.transform(value => !isAbsent(value) ? value.toLowerCase() : value).test({\n      message,\n      name: 'string_case',\n      exclusive: true,\n      test: value => isAbsent(value) || value === value.toLowerCase()\n    });\n  }\n\n  uppercase(message = locale.uppercase) {\n    return this.transform(value => !isAbsent(value) ? value.toUpperCase() : value).test({\n      message,\n      name: 'string_case',\n      exclusive: true,\n      test: value => isAbsent(value) || value === value.toUpperCase()\n    });\n  }\n\n}\ncreate.prototype = StringSchema.prototype; //\n// String Interfaces\n//"]},"metadata":{},"sourceType":"module"}