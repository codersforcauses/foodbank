{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar Global_1 = require(\"./Global\");\n\nvar Util_1 = require(\"./Util\");\n\nexports.DD = {\n  get isDragging() {\n    var flag = false;\n\n    exports.DD._dragElements.forEach(function (elem) {\n      if (elem.dragStatus === 'dragging') {\n        flag = true;\n      }\n    });\n\n    return flag;\n  },\n\n  justDragged: false,\n\n  get node() {\n    var node;\n\n    exports.DD._dragElements.forEach(function (elem) {\n      node = elem.node;\n    });\n\n    return node;\n  },\n\n  _dragElements: new Map(),\n  _drag: function (evt) {\n    var nodesToFireEvents = [];\n\n    exports.DD._dragElements.forEach(function (elem, key) {\n      var node = elem.node;\n      var stage = node.getStage();\n      stage.setPointersPositions(evt);\n\n      if (elem.pointerId === undefined) {\n        elem.pointerId = Util_1.Util._getFirstPointerId(evt);\n      }\n\n      var pos = stage._changedPointerPositions.find(function (pos) {\n        return pos.id === elem.pointerId;\n      });\n\n      if (!pos) {\n        return;\n      }\n\n      if (elem.dragStatus !== 'dragging') {\n        var dragDistance = node.dragDistance();\n        var distance = Math.max(Math.abs(pos.x - elem.startPointerPos.x), Math.abs(pos.y - elem.startPointerPos.y));\n\n        if (distance < dragDistance) {\n          return;\n        }\n\n        node.startDrag({\n          evt: evt\n        });\n\n        if (!node.isDragging()) {\n          return;\n        }\n      }\n\n      node._setDragPosition(evt, elem);\n\n      nodesToFireEvents.push(node);\n    });\n\n    nodesToFireEvents.forEach(function (node) {\n      node.fire('dragmove', {\n        type: 'dragmove',\n        target: node,\n        evt: evt\n      }, true);\n    });\n  },\n  _endDragBefore: function (evt) {\n    exports.DD._dragElements.forEach(function (elem, key) {\n      var node = elem.node;\n      var stage = node.getStage();\n\n      if (evt) {\n        stage.setPointersPositions(evt);\n      }\n\n      var pos = stage._changedPointerPositions.find(function (pos) {\n        return pos.id === elem.pointerId;\n      });\n\n      if (!pos) {\n        return;\n      }\n\n      if (elem.dragStatus === 'dragging' || elem.dragStatus === 'stopped') {\n        exports.DD.justDragged = true;\n        Global_1.Konva.listenClickTap = false;\n        elem.dragStatus = 'stopped';\n      }\n\n      var drawNode = elem.node.getLayer() || elem.node instanceof Global_1.Konva['Stage'] && elem.node;\n\n      if (drawNode) {\n        drawNode.batchDraw();\n      }\n    });\n  },\n  _endDragAfter: function (evt) {\n    exports.DD._dragElements.forEach(function (elem, key) {\n      if (elem.dragStatus === 'stopped') {\n        elem.node.fire('dragend', {\n          type: 'dragend',\n          target: elem.node,\n          evt: evt\n        }, true);\n      }\n\n      if (elem.dragStatus !== 'dragging') {\n        exports.DD._dragElements.delete(key);\n      }\n    });\n  }\n};\n\nif (Global_1.Konva.isBrowser) {\n  window.addEventListener('mouseup', exports.DD._endDragBefore, true);\n  window.addEventListener('touchend', exports.DD._endDragBefore, true);\n  window.addEventListener('mousemove', exports.DD._drag);\n  window.addEventListener('touchmove', exports.DD._drag);\n  window.addEventListener('mouseup', exports.DD._endDragAfter, false);\n  window.addEventListener('touchend', exports.DD._endDragAfter, false);\n}","map":{"version":3,"sources":["/home/jun/foodbank/node_modules/konva/lib/DragAndDrop.js"],"names":["Object","defineProperty","exports","value","Global_1","require","Util_1","DD","isDragging","flag","_dragElements","forEach","elem","dragStatus","justDragged","node","Map","_drag","evt","nodesToFireEvents","key","stage","getStage","setPointersPositions","pointerId","undefined","Util","_getFirstPointerId","pos","_changedPointerPositions","find","id","dragDistance","distance","Math","max","abs","x","startPointerPos","y","startDrag","_setDragPosition","push","fire","type","target","_endDragBefore","Konva","listenClickTap","drawNode","getLayer","batchDraw","_endDragAfter","delete","isBrowser","window","addEventListener"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Global_1 = require(\"./Global\");\nvar Util_1 = require(\"./Util\");\nexports.DD = {\n    get isDragging() {\n        var flag = false;\n        exports.DD._dragElements.forEach(function (elem) {\n            if (elem.dragStatus === 'dragging') {\n                flag = true;\n            }\n        });\n        return flag;\n    },\n    justDragged: false,\n    get node() {\n        var node;\n        exports.DD._dragElements.forEach(function (elem) {\n            node = elem.node;\n        });\n        return node;\n    },\n    _dragElements: new Map(),\n    _drag: function (evt) {\n        var nodesToFireEvents = [];\n        exports.DD._dragElements.forEach(function (elem, key) {\n            var node = elem.node;\n            var stage = node.getStage();\n            stage.setPointersPositions(evt);\n            if (elem.pointerId === undefined) {\n                elem.pointerId = Util_1.Util._getFirstPointerId(evt);\n            }\n            var pos = stage._changedPointerPositions.find(function (pos) { return pos.id === elem.pointerId; });\n            if (!pos) {\n                return;\n            }\n            if (elem.dragStatus !== 'dragging') {\n                var dragDistance = node.dragDistance();\n                var distance = Math.max(Math.abs(pos.x - elem.startPointerPos.x), Math.abs(pos.y - elem.startPointerPos.y));\n                if (distance < dragDistance) {\n                    return;\n                }\n                node.startDrag({ evt: evt });\n                if (!node.isDragging()) {\n                    return;\n                }\n            }\n            node._setDragPosition(evt, elem);\n            nodesToFireEvents.push(node);\n        });\n        nodesToFireEvents.forEach(function (node) {\n            node.fire('dragmove', {\n                type: 'dragmove',\n                target: node,\n                evt: evt,\n            }, true);\n        });\n    },\n    _endDragBefore: function (evt) {\n        exports.DD._dragElements.forEach(function (elem, key) {\n            var node = elem.node;\n            var stage = node.getStage();\n            if (evt) {\n                stage.setPointersPositions(evt);\n            }\n            var pos = stage._changedPointerPositions.find(function (pos) { return pos.id === elem.pointerId; });\n            if (!pos) {\n                return;\n            }\n            if (elem.dragStatus === 'dragging' || elem.dragStatus === 'stopped') {\n                exports.DD.justDragged = true;\n                Global_1.Konva.listenClickTap = false;\n                elem.dragStatus = 'stopped';\n            }\n            var drawNode = elem.node.getLayer() ||\n                (elem.node instanceof Global_1.Konva['Stage'] && elem.node);\n            if (drawNode) {\n                drawNode.batchDraw();\n            }\n        });\n    },\n    _endDragAfter: function (evt) {\n        exports.DD._dragElements.forEach(function (elem, key) {\n            if (elem.dragStatus === 'stopped') {\n                elem.node.fire('dragend', {\n                    type: 'dragend',\n                    target: elem.node,\n                    evt: evt,\n                }, true);\n            }\n            if (elem.dragStatus !== 'dragging') {\n                exports.DD._dragElements.delete(key);\n            }\n        });\n    },\n};\nif (Global_1.Konva.isBrowser) {\n    window.addEventListener('mouseup', exports.DD._endDragBefore, true);\n    window.addEventListener('touchend', exports.DD._endDragBefore, true);\n    window.addEventListener('mousemove', exports.DD._drag);\n    window.addEventListener('touchmove', exports.DD._drag);\n    window.addEventListener('mouseup', exports.DD._endDragAfter, false);\n    window.addEventListener('touchend', exports.DD._endDragAfter, false);\n}\n"]},"metadata":{},"sourceType":"script"}