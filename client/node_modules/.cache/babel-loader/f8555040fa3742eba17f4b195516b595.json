{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/jun/foodbank/client/src/Components/Button/index.tsx\";\nimport React from 'react';\n\nconst Button = ({\n  bgColor = 'bg-primary',\n  children,\n  ...props\n}) => {\n  const textColor = bgColor !== 'bg-primary' ? 'text-black' : 'text-white';\n  let shadowColor = '';\n\n  if (bgColor == 'bg-primary') {\n    shadowColor = 'shadow-primary';\n  } else if (bgColor == 'bg-orange') {\n    shadowColor = 'shadow-orange';\n  } else if (bgColor == 'bg-blue') {\n    shadowColor = 'shadow-blue';\n  } else if (bgColor == 'bg-teal') {\n    shadowColor = 'shadow-teal';\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    type: \"button\",\n    className: [textColor, bgColor, shadowColor, 'text-lg px-8 py-3 rounded-full uppercase font-serif'].join(' '),\n    ...props,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Button;\nexport default Button;\n\nvar _c;\n\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"sources":["/home/jun/foodbank/client/src/Components/Button/index.tsx"],"names":["React","Button","bgColor","children","props","textColor","shadowColor","join"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAqBA,MAAMC,MAA6B,GAAG,CAAC;AACrCC,EAAAA,OAAO,GAAG,YAD2B;AAErCC,EAAAA,QAFqC;AAGrC,KAAGC;AAHkC,CAAD,KAIhC;AACJ,QAAMC,SAAS,GAAGH,OAAO,KAAK,YAAZ,GAA2B,YAA3B,GAA0C,YAA5D;AACA,MAAII,WAAW,GAAG,EAAlB;;AACA,MAAIJ,OAAO,IAAI,YAAf,EAA6B;AAC3BI,IAAAA,WAAW,GAAG,gBAAd;AACD,GAFD,MAEO,IAAIJ,OAAO,IAAI,WAAf,EAA4B;AACjCI,IAAAA,WAAW,GAAG,eAAd;AACD,GAFM,MAEA,IAAIJ,OAAO,IAAI,SAAf,EAA0B;AAC/BI,IAAAA,WAAW,GAAG,aAAd;AACD,GAFM,MAEA,IAAIJ,OAAO,IAAI,SAAf,EAA0B;AAC/BI,IAAAA,WAAW,GAAG,aAAd;AACD;;AACD,sBACE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAE,CACTD,SADS,EAETH,OAFS,EAGTI,WAHS,EAIT,qDAJS,EAKTC,IALS,CAKJ,GALI,CAFb;AAAA,OAQMH,KARN;AAAA,cAUGD;AAVH;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CA9BD;;KAAMF,M;AAgCN,eAAeA,MAAf","sourcesContent":["import React from 'react'\n\nexport interface ButtonProps {\n  /**\n   * Button background colour styling\n   */\n  bgColor?: 'bg-primary' | 'bg-orange' | 'bg-blue' | 'bg-teal'\n  /**\n   * Children prop\n   */\n  children: string\n  /**\n   * Optional click handler\n   */\n  onClick?: () => void\n  /**\n   * Button Type\n   */\n  type?: 'button' | 'submit' | 'reset'\n}\n\nconst Button: React.FC<ButtonProps> = ({\n  bgColor = 'bg-primary',\n  children,\n  ...props\n}) => {\n  const textColor = bgColor !== 'bg-primary' ? 'text-black' : 'text-white'\n  let shadowColor = ''\n  if (bgColor == 'bg-primary') {\n    shadowColor = 'shadow-primary'\n  } else if (bgColor == 'bg-orange') {\n    shadowColor = 'shadow-orange'\n  } else if (bgColor == 'bg-blue') {\n    shadowColor = 'shadow-blue'\n  } else if (bgColor == 'bg-teal') {\n    shadowColor = 'shadow-teal'\n  }\n  return (\n    <button\n      type='button'\n      className={[\n        textColor,\n        bgColor,\n        shadowColor,\n        'text-lg px-8 py-3 rounded-full uppercase font-serif'\n      ].join(' ')}\n      {...props}\n    >\n      {children}\n    </button>\n  )\n}\n\nexport default Button\n"]},"metadata":{},"sourceType":"module"}