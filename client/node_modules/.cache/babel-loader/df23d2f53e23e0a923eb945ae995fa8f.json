{"ast":null,"code":"function ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nimport { ACTION_PAN, MODE_IDLE, MODE_PANNING } from '../constants';\nimport { set, getSVGPoint } from './common';\nimport { fromObject, translate, transform, applyToPoints } from 'transformation-matrix';\n/**\n * Atomic pan operation\n * @param value\n * @param SVGDeltaX drag movement\n * @param SVGDeltaY drag movement\n * @param panLimit forces the image to keep at least x pixel inside the viewer\n * @returns {Object}\n */\n\nexport function pan(value, SVGDeltaX, SVGDeltaY) {\n  var panLimit = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : undefined;\n  var matrix = transform(fromObject(value), //2\n  translate(SVGDeltaX, SVGDeltaY) //1\n  ); // apply pan limits\n\n  if (panLimit) {\n    var _applyToPoints = applyToPoints(matrix, [{\n      x: value.SVGMinX + panLimit,\n      y: value.SVGMinY + panLimit\n    }, {\n      x: value.SVGMinX + value.SVGWidth - panLimit,\n      y: value.SVGMinY + value.SVGHeight - panLimit\n    }]),\n        _applyToPoints2 = _slicedToArray(_applyToPoints, 2),\n        _applyToPoints2$ = _applyToPoints2[0],\n        x1 = _applyToPoints2$.x,\n        y1 = _applyToPoints2$.y,\n        _applyToPoints2$2 = _applyToPoints2[1],\n        x2 = _applyToPoints2$2.x,\n        y2 = _applyToPoints2$2.y; //x limit\n\n\n    var moveX = 0;\n    if (value.viewerWidth - x1 < 0) moveX = value.viewerWidth - x1;else if (x2 < 0) moveX = -x2; //y limit\n\n    var moveY = 0;\n    if (value.viewerHeight - y1 < 0) moveY = value.viewerHeight - y1;else if (y2 < 0) moveY = -y2; //apply limits\n\n    matrix = transform(translate(moveX, moveY), matrix);\n  }\n\n  return set(value, _objectSpread({\n    mode: MODE_IDLE\n  }, matrix), ACTION_PAN);\n}\n/**\n * Start pan operation lifecycle\n * @param value\n * @param viewerX\n * @param viewerY\n * @return {ReadonlyArray<unknown>}\n */\n\nexport function startPanning(value, viewerX, viewerY) {\n  return set(value, {\n    mode: MODE_PANNING,\n    startX: viewerX,\n    startY: viewerY,\n    endX: viewerX,\n    endY: viewerY\n  }, ACTION_PAN);\n}\n/**\n * Continue pan operation lifecycle\n * @param value\n * @param viewerX\n * @param viewerY\n * @param panLimit\n * @return {ReadonlyArray<unknown>}\n */\n\nexport function updatePanning(value, viewerX, viewerY, panLimit) {\n  if (value.mode !== MODE_PANNING) throw new Error('update pan not allowed in this mode ' + value.mode);\n  var endX = value.endX,\n      endY = value.endY;\n  var start = getSVGPoint(value, endX, endY);\n  var end = getSVGPoint(value, viewerX, viewerY);\n  var deltaX = end.x - start.x;\n  var deltaY = end.y - start.y;\n  var nextValue = pan(value, deltaX, deltaY, panLimit);\n  return set(nextValue, {\n    mode: MODE_PANNING,\n    endX: viewerX,\n    endY: viewerY\n  }, ACTION_PAN);\n}\n/**\n * Stop pan operation lifecycle\n * @param value\n * @return {ReadonlyArray<unknown>}\n */\n\nexport function stopPanning(value) {\n  return set(value, {\n    mode: MODE_IDLE,\n    startX: null,\n    startY: null,\n    endX: null,\n    endY: null\n  }, ACTION_PAN);\n}\n/**\n * when pointer is on viewer edge -> pan image\n * @param value\n * @param viewerX\n * @param viewerY\n * @return {ReadonlyArray<any>}\n */\n\nexport function autoPanIfNeeded(value, viewerX, viewerY) {\n  var deltaX = 0;\n  var deltaY = 0;\n  if (viewerY <= 20) deltaY = 2;\n  if (value.viewerWidth - viewerX <= 20) deltaX = -2;\n  if (value.viewerHeight - viewerY <= 20) deltaY = -2;\n  if (viewerX <= 20) deltaX = 2;\n  deltaX = deltaX / value.d;\n  deltaY = deltaY / value.d;\n  return deltaX === 0 && deltaY === 0 ? value : pan(value, deltaX, deltaY);\n}","map":{"version":3,"sources":["/home/jun/foodbank/node_modules/react-svg-pan-zoom/build-es/features/pan.js"],"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","value","configurable","writable","_slicedToArray","arr","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","TypeError","o","minLen","_arrayLikeToArray","n","prototype","toString","call","slice","constructor","name","Array","from","test","len","arr2","Symbol","iterator","_arr","_n","_d","_e","undefined","_i","_s","next","done","err","isArray","ACTION_PAN","MODE_IDLE","MODE_PANNING","set","getSVGPoint","fromObject","translate","transform","applyToPoints","pan","SVGDeltaX","SVGDeltaY","panLimit","matrix","_applyToPoints","x","SVGMinX","y","SVGMinY","SVGWidth","SVGHeight","_applyToPoints2","_applyToPoints2$","x1","y1","_applyToPoints2$2","x2","y2","moveX","viewerWidth","moveY","viewerHeight","mode","startPanning","viewerX","viewerY","startX","startY","endX","endY","updatePanning","Error","start","end","deltaX","deltaY","nextValue","stopPanning","autoPanIfNeeded","d"],"mappings":"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","sourcesContent":["function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport { ACTION_PAN, MODE_IDLE, MODE_PANNING } from '../constants';\nimport { set, getSVGPoint } from './common';\nimport { fromObject, translate, transform, applyToPoints } from 'transformation-matrix';\n/**\n * Atomic pan operation\n * @param value\n * @param SVGDeltaX drag movement\n * @param SVGDeltaY drag movement\n * @param panLimit forces the image to keep at least x pixel inside the viewer\n * @returns {Object}\n */\n\nexport function pan(value, SVGDeltaX, SVGDeltaY) {\n  var panLimit = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : undefined;\n  var matrix = transform(fromObject(value), //2\n  translate(SVGDeltaX, SVGDeltaY) //1\n  ); // apply pan limits\n\n  if (panLimit) {\n    var _applyToPoints = applyToPoints(matrix, [{\n      x: value.SVGMinX + panLimit,\n      y: value.SVGMinY + panLimit\n    }, {\n      x: value.SVGMinX + value.SVGWidth - panLimit,\n      y: value.SVGMinY + value.SVGHeight - panLimit\n    }]),\n        _applyToPoints2 = _slicedToArray(_applyToPoints, 2),\n        _applyToPoints2$ = _applyToPoints2[0],\n        x1 = _applyToPoints2$.x,\n        y1 = _applyToPoints2$.y,\n        _applyToPoints2$2 = _applyToPoints2[1],\n        x2 = _applyToPoints2$2.x,\n        y2 = _applyToPoints2$2.y; //x limit\n\n\n    var moveX = 0;\n    if (value.viewerWidth - x1 < 0) moveX = value.viewerWidth - x1;else if (x2 < 0) moveX = -x2; //y limit\n\n    var moveY = 0;\n    if (value.viewerHeight - y1 < 0) moveY = value.viewerHeight - y1;else if (y2 < 0) moveY = -y2; //apply limits\n\n    matrix = transform(translate(moveX, moveY), matrix);\n  }\n\n  return set(value, _objectSpread({\n    mode: MODE_IDLE\n  }, matrix), ACTION_PAN);\n}\n/**\n * Start pan operation lifecycle\n * @param value\n * @param viewerX\n * @param viewerY\n * @return {ReadonlyArray<unknown>}\n */\n\nexport function startPanning(value, viewerX, viewerY) {\n  return set(value, {\n    mode: MODE_PANNING,\n    startX: viewerX,\n    startY: viewerY,\n    endX: viewerX,\n    endY: viewerY\n  }, ACTION_PAN);\n}\n/**\n * Continue pan operation lifecycle\n * @param value\n * @param viewerX\n * @param viewerY\n * @param panLimit\n * @return {ReadonlyArray<unknown>}\n */\n\nexport function updatePanning(value, viewerX, viewerY, panLimit) {\n  if (value.mode !== MODE_PANNING) throw new Error('update pan not allowed in this mode ' + value.mode);\n  var endX = value.endX,\n      endY = value.endY;\n  var start = getSVGPoint(value, endX, endY);\n  var end = getSVGPoint(value, viewerX, viewerY);\n  var deltaX = end.x - start.x;\n  var deltaY = end.y - start.y;\n  var nextValue = pan(value, deltaX, deltaY, panLimit);\n  return set(nextValue, {\n    mode: MODE_PANNING,\n    endX: viewerX,\n    endY: viewerY\n  }, ACTION_PAN);\n}\n/**\n * Stop pan operation lifecycle\n * @param value\n * @return {ReadonlyArray<unknown>}\n */\n\nexport function stopPanning(value) {\n  return set(value, {\n    mode: MODE_IDLE,\n    startX: null,\n    startY: null,\n    endX: null,\n    endY: null\n  }, ACTION_PAN);\n}\n/**\n * when pointer is on viewer edge -> pan image\n * @param value\n * @param viewerX\n * @param viewerY\n * @return {ReadonlyArray<any>}\n */\n\nexport function autoPanIfNeeded(value, viewerX, viewerY) {\n  var deltaX = 0;\n  var deltaY = 0;\n  if (viewerY <= 20) deltaY = 2;\n  if (value.viewerWidth - viewerX <= 20) deltaX = -2;\n  if (value.viewerHeight - viewerY <= 20) deltaY = -2;\n  if (viewerX <= 20) deltaX = 2;\n  deltaX = deltaX / value.d;\n  deltaY = deltaY / value.d;\n  return deltaX === 0 && deltaY === 0 ? value : pan(value, deltaX, deltaY);\n}"]},"metadata":{},"sourceType":"module"}