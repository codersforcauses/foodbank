{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar Factory_1 = require(\"../Factory\");\n\nvar Node_1 = require(\"../Node\");\n\nvar Validators_1 = require(\"../Validators\");\n\nexports.RGB = function (imageData) {\n  var data = imageData.data,\n      nPixels = data.length,\n      red = this.red(),\n      green = this.green(),\n      blue = this.blue(),\n      i,\n      brightness;\n\n  for (i = 0; i < nPixels; i += 4) {\n    brightness = (0.34 * data[i] + 0.5 * data[i + 1] + 0.16 * data[i + 2]) / 255;\n    data[i] = brightness * red;\n    data[i + 1] = brightness * green;\n    data[i + 2] = brightness * blue;\n    data[i + 3] = data[i + 3];\n  }\n};\n\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'red', 0, function (val) {\n  this._filterUpToDate = false;\n\n  if (val > 255) {\n    return 255;\n  } else if (val < 0) {\n    return 0;\n  } else {\n    return Math.round(val);\n  }\n});\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'green', 0, function (val) {\n  this._filterUpToDate = false;\n\n  if (val > 255) {\n    return 255;\n  } else if (val < 0) {\n    return 0;\n  } else {\n    return Math.round(val);\n  }\n});\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'blue', 0, Validators_1.RGBComponent, Factory_1.Factory.afterSetFilter);","map":{"version":3,"sources":["/home/jun/foodbank/node_modules/konva/lib/filters/RGB.js"],"names":["Object","defineProperty","exports","value","Factory_1","require","Node_1","Validators_1","RGB","imageData","data","nPixels","length","red","green","blue","i","brightness","Factory","addGetterSetter","Node","val","_filterUpToDate","Math","round","RGBComponent","afterSetFilter"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIC,SAAS,GAAGC,OAAO,CAAC,YAAD,CAAvB;;AACA,IAAIC,MAAM,GAAGD,OAAO,CAAC,SAAD,CAApB;;AACA,IAAIE,YAAY,GAAGF,OAAO,CAAC,eAAD,CAA1B;;AACAH,OAAO,CAACM,GAAR,GAAc,UAAUC,SAAV,EAAqB;AAC/B,MAAIC,IAAI,GAAGD,SAAS,CAACC,IAArB;AAAA,MAA2BC,OAAO,GAAGD,IAAI,CAACE,MAA1C;AAAA,MAAkDC,GAAG,GAAG,KAAKA,GAAL,EAAxD;AAAA,MAAoEC,KAAK,GAAG,KAAKA,KAAL,EAA5E;AAAA,MAA0FC,IAAI,GAAG,KAAKA,IAAL,EAAjG;AAAA,MAA8GC,CAA9G;AAAA,MAAiHC,UAAjH;;AACA,OAAKD,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGL,OAAhB,EAAyBK,CAAC,IAAI,CAA9B,EAAiC;AAC7BC,IAAAA,UAAU,GACN,CAAC,OAAOP,IAAI,CAACM,CAAD,CAAX,GAAiB,MAAMN,IAAI,CAACM,CAAC,GAAG,CAAL,CAA3B,GAAqC,OAAON,IAAI,CAACM,CAAC,GAAG,CAAL,CAAjD,IAA4D,GADhE;AAEAN,IAAAA,IAAI,CAACM,CAAD,CAAJ,GAAUC,UAAU,GAAGJ,GAAvB;AACAH,IAAAA,IAAI,CAACM,CAAC,GAAG,CAAL,CAAJ,GAAcC,UAAU,GAAGH,KAA3B;AACAJ,IAAAA,IAAI,CAACM,CAAC,GAAG,CAAL,CAAJ,GAAcC,UAAU,GAAGF,IAA3B;AACAL,IAAAA,IAAI,CAACM,CAAC,GAAG,CAAL,CAAJ,GAAcN,IAAI,CAACM,CAAC,GAAG,CAAL,CAAlB;AACH;AACJ,CAVD;;AAWAZ,SAAS,CAACc,OAAV,CAAkBC,eAAlB,CAAkCb,MAAM,CAACc,IAAzC,EAA+C,KAA/C,EAAsD,CAAtD,EAAyD,UAAUC,GAAV,EAAe;AACpE,OAAKC,eAAL,GAAuB,KAAvB;;AACA,MAAID,GAAG,GAAG,GAAV,EAAe;AACX,WAAO,GAAP;AACH,GAFD,MAGK,IAAIA,GAAG,GAAG,CAAV,EAAa;AACd,WAAO,CAAP;AACH,GAFI,MAGA;AACD,WAAOE,IAAI,CAACC,KAAL,CAAWH,GAAX,CAAP;AACH;AACJ,CAXD;AAYAjB,SAAS,CAACc,OAAV,CAAkBC,eAAlB,CAAkCb,MAAM,CAACc,IAAzC,EAA+C,OAA/C,EAAwD,CAAxD,EAA2D,UAAUC,GAAV,EAAe;AACtE,OAAKC,eAAL,GAAuB,KAAvB;;AACA,MAAID,GAAG,GAAG,GAAV,EAAe;AACX,WAAO,GAAP;AACH,GAFD,MAGK,IAAIA,GAAG,GAAG,CAAV,EAAa;AACd,WAAO,CAAP;AACH,GAFI,MAGA;AACD,WAAOE,IAAI,CAACC,KAAL,CAAWH,GAAX,CAAP;AACH;AACJ,CAXD;AAYAjB,SAAS,CAACc,OAAV,CAAkBC,eAAlB,CAAkCb,MAAM,CAACc,IAAzC,EAA+C,MAA/C,EAAuD,CAAvD,EAA0Db,YAAY,CAACkB,YAAvE,EAAqFrB,SAAS,CAACc,OAAV,CAAkBQ,cAAvG","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Factory_1 = require(\"../Factory\");\nvar Node_1 = require(\"../Node\");\nvar Validators_1 = require(\"../Validators\");\nexports.RGB = function (imageData) {\n    var data = imageData.data, nPixels = data.length, red = this.red(), green = this.green(), blue = this.blue(), i, brightness;\n    for (i = 0; i < nPixels; i += 4) {\n        brightness =\n            (0.34 * data[i] + 0.5 * data[i + 1] + 0.16 * data[i + 2]) / 255;\n        data[i] = brightness * red;\n        data[i + 1] = brightness * green;\n        data[i + 2] = brightness * blue;\n        data[i + 3] = data[i + 3];\n    }\n};\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'red', 0, function (val) {\n    this._filterUpToDate = false;\n    if (val > 255) {\n        return 255;\n    }\n    else if (val < 0) {\n        return 0;\n    }\n    else {\n        return Math.round(val);\n    }\n});\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'green', 0, function (val) {\n    this._filterUpToDate = false;\n    if (val > 255) {\n        return 255;\n    }\n    else if (val < 0) {\n        return 0;\n    }\n    else {\n        return Math.round(val);\n    }\n});\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'blue', 0, Validators_1.RGBComponent, Factory_1.Factory.afterSetFilter);\n"]},"metadata":{},"sourceType":"script"}