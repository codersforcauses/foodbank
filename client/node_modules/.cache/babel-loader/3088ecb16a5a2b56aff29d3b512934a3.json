{"ast":null,"code":"import { fromObject } from './fromObject';\nimport { translate } from './translate';\nimport { scale } from './scale';\nimport { rotateDEG } from './rotate';\nimport { skewDEG } from './skew';\nimport { shear } from './shear';\n/**\n * Converts array of matrix descriptor to array of matrix\n * @param definitionOrArrayOfDefinition {Object[]} Array of object describing the matrix\n * @returns {Matrix[]} Array of matrix\n *\n * @example\n * > fromDefinition([\n *  { type: 'matrix', a:1, b:2, c:3, d:4, e:5, f:6 },\n *  { type: 'translate', tx: 10, ty: 20 },\n *  { type: 'scale', sx: 2, sy: 4 },\n *  { type: 'rotate', angle: 90, cx: 50, cy: 25 },\n *  { type: 'skewX', angle: 45 },\n *  { type: 'skewY',  angle: 45 },\n *  { type: 'shear', shx: 10, shy: 20}\n * ])\n *\n * [\n *  { a: 1, b: 2, c: 3, d: 4, e: 5, f: 6 },\n *  { a: 1, c: 0, e: 10, b: 0, d: 1, f: 20 },\n *  { a: 2, c: 0, e: 0, b: 0, d: 4, f: 0 },\n *  { a: 6.123, c: -1, e: 0, b: 1, d: 6.123, f: 0 },\n *  { a: 1, c: 0.99.., e: 0, b: 0, d: 1, f: 0 },\n *  { a: 1, c: 0, e: 0, b: 0.99, d: 1, f: 0 },\n *  { a: 1, c: 10, e: 0, b: 20, d: 1, f: 0 }\n * ]\n **/\n\nexport function fromDefinition(definitionOrArrayOfDefinition) {\n  return Array.isArray(definitionOrArrayOfDefinition) ? definitionOrArrayOfDefinition.map(mapper) : mapper(definitionOrArrayOfDefinition);\n\n  function mapper(descriptor) {\n    switch (descriptor.type) {\n      case 'matrix':\n        if ('a' in descriptor && 'b' in descriptor && 'c' in descriptor && 'd' in descriptor && 'e' in descriptor && 'f' in descriptor) {\n          return fromObject(descriptor);\n        } else {\n          throw new Error('MISSING_MANDATORY_PARAM');\n        }\n\n      case 'translate':\n        if (!('tx' in descriptor)) throw new Error('MISSING_MANDATORY_PARAM');\n        if ('ty' in descriptor) return translate(descriptor.tx, descriptor.ty);\n        return translate(descriptor.tx);\n\n      case 'scale':\n        if (!('sx' in descriptor)) throw new Error('MISSING_MANDATORY_PARAM');\n        if ('sy' in descriptor) return scale(descriptor.sx, descriptor.sy);\n        return scale(descriptor.sx);\n\n      case 'rotate':\n        if (!('angle' in descriptor)) throw new Error('MISSING_MANDATORY_PARAM');\n\n        if ('cx' in descriptor && 'cy' in descriptor) {\n          return rotateDEG(descriptor.angle, descriptor.cx, descriptor.cy);\n        }\n\n        return rotateDEG(descriptor.angle);\n\n      case 'skewX':\n        if (!('angle' in descriptor)) throw new Error('MISSING_MANDATORY_PARAM');\n        return skewDEG(descriptor.angle, 0);\n\n      case 'skewY':\n        if (!('angle' in descriptor)) throw new Error('MISSING_MANDATORY_PARAM');\n        return skewDEG(0, descriptor.angle);\n\n      case 'shear':\n        if (!('shx' in descriptor && 'shy' in descriptor)) throw new Error('MISSING_MANDATORY_PARAM');\n        return shear(descriptor.shx, descriptor.shy);\n\n      default:\n        throw new Error('UNSUPPORTED_DESCRIPTOR');\n    }\n  }\n}","map":{"version":3,"sources":["/home/jun/foodbank/node_modules/transformation-matrix/src/fromDefinition.js"],"names":["fromObject","translate","scale","rotateDEG","skewDEG","shear","fromDefinition","definitionOrArrayOfDefinition","Array","isArray","map","mapper","descriptor","type","Error","tx","ty","sx","sy","angle","cx","cy","shx","shy"],"mappings":"AAAA,SAASA,UAAT,QAA2B,cAA3B;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,KAAT,QAAsB,SAAtB;AACA,SAASC,SAAT,QAA0B,UAA1B;AACA,SAASC,OAAT,QAAwB,QAAxB;AACA,SAASC,KAAT,QAAsB,SAAtB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,cAAT,CAAyBC,6BAAzB,EAAwD;AAC7D,SAAOC,KAAK,CAACC,OAAN,CAAcF,6BAAd,IACHA,6BAA6B,CAACG,GAA9B,CAAkCC,MAAlC,CADG,GAEHA,MAAM,CAACJ,6BAAD,CAFV;;AAIA,WAASI,MAAT,CAAiBC,UAAjB,EAA6B;AAC3B,YAAQA,UAAU,CAACC,IAAnB;AACE,WAAK,QAAL;AACE,YAAI,OAAOD,UAAP,IACF,OAAOA,UADL,IAEF,OAAOA,UAFL,IAGF,OAAOA,UAHL,IAIF,OAAOA,UAJL,IAKF,OAAOA,UALT,EAME;AACA,iBAAOZ,UAAU,CAACY,UAAD,CAAjB;AACD,SARD,MAQO;AACL,gBAAM,IAAIE,KAAJ,CAAU,yBAAV,CAAN;AACD;;AAEH,WAAK,WAAL;AACE,YAAI,EAAE,QAAQF,UAAV,CAAJ,EAA2B,MAAM,IAAIE,KAAJ,CAAU,yBAAV,CAAN;AAE3B,YAAI,QAAQF,UAAZ,EAAwB,OAAOX,SAAS,CAACW,UAAU,CAACG,EAAZ,EAAgBH,UAAU,CAACI,EAA3B,CAAhB;AAExB,eAAOf,SAAS,CAACW,UAAU,CAACG,EAAZ,CAAhB;;AAEF,WAAK,OAAL;AACE,YAAI,EAAE,QAAQH,UAAV,CAAJ,EAA2B,MAAM,IAAIE,KAAJ,CAAU,yBAAV,CAAN;AAE3B,YAAI,QAAQF,UAAZ,EAAwB,OAAOV,KAAK,CAACU,UAAU,CAACK,EAAZ,EAAgBL,UAAU,CAACM,EAA3B,CAAZ;AAExB,eAAOhB,KAAK,CAACU,UAAU,CAACK,EAAZ,CAAZ;;AAEF,WAAK,QAAL;AACE,YAAI,EAAE,WAAWL,UAAb,CAAJ,EAA8B,MAAM,IAAIE,KAAJ,CAAU,yBAAV,CAAN;;AAE9B,YAAI,QAAQF,UAAR,IAAsB,QAAQA,UAAlC,EAA8C;AAC5C,iBAAOT,SAAS,CAACS,UAAU,CAACO,KAAZ,EAAmBP,UAAU,CAACQ,EAA9B,EAAkCR,UAAU,CAACS,EAA7C,CAAhB;AACD;;AACD,eAAOlB,SAAS,CAACS,UAAU,CAACO,KAAZ,CAAhB;;AAEF,WAAK,OAAL;AACE,YAAI,EAAE,WAAWP,UAAb,CAAJ,EAA8B,MAAM,IAAIE,KAAJ,CAAU,yBAAV,CAAN;AAC9B,eAAOV,OAAO,CAACQ,UAAU,CAACO,KAAZ,EAAmB,CAAnB,CAAd;;AAEF,WAAK,OAAL;AACE,YAAI,EAAE,WAAWP,UAAb,CAAJ,EAA8B,MAAM,IAAIE,KAAJ,CAAU,yBAAV,CAAN;AAC9B,eAAOV,OAAO,CAAC,CAAD,EAAIQ,UAAU,CAACO,KAAf,CAAd;;AAEF,WAAK,OAAL;AACE,YAAI,EAAE,SAASP,UAAT,IAAuB,SAASA,UAAlC,CAAJ,EAAmD,MAAM,IAAIE,KAAJ,CAAU,yBAAV,CAAN;AACnD,eAAOT,KAAK,CAACO,UAAU,CAACU,GAAZ,EAAiBV,UAAU,CAACW,GAA5B,CAAZ;;AAEF;AACE,cAAM,IAAIT,KAAJ,CAAU,wBAAV,CAAN;AAjDJ;AAmDD;AACF","sourcesContent":["import { fromObject } from './fromObject'\nimport { translate } from './translate'\nimport { scale } from './scale'\nimport { rotateDEG } from './rotate'\nimport { skewDEG } from './skew'\nimport { shear } from './shear'\n\n/**\n * Converts array of matrix descriptor to array of matrix\n * @param definitionOrArrayOfDefinition {Object[]} Array of object describing the matrix\n * @returns {Matrix[]} Array of matrix\n *\n * @example\n * > fromDefinition([\n *  { type: 'matrix', a:1, b:2, c:3, d:4, e:5, f:6 },\n *  { type: 'translate', tx: 10, ty: 20 },\n *  { type: 'scale', sx: 2, sy: 4 },\n *  { type: 'rotate', angle: 90, cx: 50, cy: 25 },\n *  { type: 'skewX', angle: 45 },\n *  { type: 'skewY',  angle: 45 },\n *  { type: 'shear', shx: 10, shy: 20}\n * ])\n *\n * [\n *  { a: 1, b: 2, c: 3, d: 4, e: 5, f: 6 },\n *  { a: 1, c: 0, e: 10, b: 0, d: 1, f: 20 },\n *  { a: 2, c: 0, e: 0, b: 0, d: 4, f: 0 },\n *  { a: 6.123, c: -1, e: 0, b: 1, d: 6.123, f: 0 },\n *  { a: 1, c: 0.99.., e: 0, b: 0, d: 1, f: 0 },\n *  { a: 1, c: 0, e: 0, b: 0.99, d: 1, f: 0 },\n *  { a: 1, c: 10, e: 0, b: 20, d: 1, f: 0 }\n * ]\n **/\nexport function fromDefinition (definitionOrArrayOfDefinition) {\n  return Array.isArray(definitionOrArrayOfDefinition)\n    ? definitionOrArrayOfDefinition.map(mapper)\n    : mapper(definitionOrArrayOfDefinition)\n\n  function mapper (descriptor) {\n    switch (descriptor.type) {\n      case 'matrix':\n        if ('a' in descriptor &&\n          'b' in descriptor &&\n          'c' in descriptor &&\n          'd' in descriptor &&\n          'e' in descriptor &&\n          'f' in descriptor\n        ) {\n          return fromObject(descriptor)\n        } else {\n          throw new Error('MISSING_MANDATORY_PARAM')\n        }\n\n      case 'translate':\n        if (!('tx' in descriptor)) throw new Error('MISSING_MANDATORY_PARAM')\n\n        if ('ty' in descriptor) return translate(descriptor.tx, descriptor.ty)\n\n        return translate(descriptor.tx)\n\n      case 'scale':\n        if (!('sx' in descriptor)) throw new Error('MISSING_MANDATORY_PARAM')\n\n        if ('sy' in descriptor) return scale(descriptor.sx, descriptor.sy)\n\n        return scale(descriptor.sx)\n\n      case 'rotate':\n        if (!('angle' in descriptor)) throw new Error('MISSING_MANDATORY_PARAM')\n\n        if ('cx' in descriptor && 'cy' in descriptor) {\n          return rotateDEG(descriptor.angle, descriptor.cx, descriptor.cy)\n        }\n        return rotateDEG(descriptor.angle)\n\n      case 'skewX':\n        if (!('angle' in descriptor)) throw new Error('MISSING_MANDATORY_PARAM')\n        return skewDEG(descriptor.angle, 0)\n\n      case 'skewY':\n        if (!('angle' in descriptor)) throw new Error('MISSING_MANDATORY_PARAM')\n        return skewDEG(0, descriptor.angle)\n\n      case 'shear':\n        if (!('shx' in descriptor && 'shy' in descriptor)) throw new Error('MISSING_MANDATORY_PARAM')\n        return shear(descriptor.shx, descriptor.shy)\n\n      default:\n        throw new Error('UNSUPPORTED_DESCRIPTOR')\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}