{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar Factory_1 = require(\"../Factory\");\n\nvar Node_1 = require(\"../Node\");\n\nvar Validators_1 = require(\"../Validators\");\n\nfunction BlurStack() {\n  this.r = 0;\n  this.g = 0;\n  this.b = 0;\n  this.a = 0;\n  this.next = null;\n}\n\nvar mul_table = [512, 512, 456, 512, 328, 456, 335, 512, 405, 328, 271, 456, 388, 335, 292, 512, 454, 405, 364, 328, 298, 271, 496, 456, 420, 388, 360, 335, 312, 292, 273, 512, 482, 454, 428, 405, 383, 364, 345, 328, 312, 298, 284, 271, 259, 496, 475, 456, 437, 420, 404, 388, 374, 360, 347, 335, 323, 312, 302, 292, 282, 273, 265, 512, 497, 482, 468, 454, 441, 428, 417, 405, 394, 383, 373, 364, 354, 345, 337, 328, 320, 312, 305, 298, 291, 284, 278, 271, 265, 259, 507, 496, 485, 475, 465, 456, 446, 437, 428, 420, 412, 404, 396, 388, 381, 374, 367, 360, 354, 347, 341, 335, 329, 323, 318, 312, 307, 302, 297, 292, 287, 282, 278, 273, 269, 265, 261, 512, 505, 497, 489, 482, 475, 468, 461, 454, 447, 441, 435, 428, 422, 417, 411, 405, 399, 394, 389, 383, 378, 373, 368, 364, 359, 354, 350, 345, 341, 337, 332, 328, 324, 320, 316, 312, 309, 305, 301, 298, 294, 291, 287, 284, 281, 278, 274, 271, 268, 265, 262, 259, 257, 507, 501, 496, 491, 485, 480, 475, 470, 465, 460, 456, 451, 446, 442, 437, 433, 428, 424, 420, 416, 412, 408, 404, 400, 396, 392, 388, 385, 381, 377, 374, 370, 367, 363, 360, 357, 354, 350, 347, 344, 341, 338, 335, 332, 329, 326, 323, 320, 318, 315, 312, 310, 307, 304, 302, 299, 297, 294, 292, 289, 287, 285, 282, 280, 278, 275, 273, 271, 269, 267, 265, 263, 261, 259];\nvar shg_table = [9, 11, 12, 13, 13, 14, 14, 15, 15, 15, 15, 16, 16, 16, 16, 17, 17, 17, 17, 17, 17, 17, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24];\n\nfunction filterGaussBlurRGBA(imageData, radius) {\n  var pixels = imageData.data,\n      width = imageData.width,\n      height = imageData.height;\n  var x, y, i, p, yp, yi, yw, r_sum, g_sum, b_sum, a_sum, r_out_sum, g_out_sum, b_out_sum, a_out_sum, r_in_sum, g_in_sum, b_in_sum, a_in_sum, pr, pg, pb, pa, rbs;\n  var div = radius + radius + 1,\n      widthMinus1 = width - 1,\n      heightMinus1 = height - 1,\n      radiusPlus1 = radius + 1,\n      sumFactor = radiusPlus1 * (radiusPlus1 + 1) / 2,\n      stackStart = new BlurStack(),\n      stackEnd = null,\n      stack = stackStart,\n      stackIn = null,\n      stackOut = null,\n      mul_sum = mul_table[radius],\n      shg_sum = shg_table[radius];\n\n  for (i = 1; i < div; i++) {\n    stack = stack.next = new BlurStack();\n\n    if (i === radiusPlus1) {\n      stackEnd = stack;\n    }\n  }\n\n  stack.next = stackStart;\n  yw = yi = 0;\n\n  for (y = 0; y < height; y++) {\n    r_in_sum = g_in_sum = b_in_sum = a_in_sum = r_sum = g_sum = b_sum = a_sum = 0;\n    r_out_sum = radiusPlus1 * (pr = pixels[yi]);\n    g_out_sum = radiusPlus1 * (pg = pixels[yi + 1]);\n    b_out_sum = radiusPlus1 * (pb = pixels[yi + 2]);\n    a_out_sum = radiusPlus1 * (pa = pixels[yi + 3]);\n    r_sum += sumFactor * pr;\n    g_sum += sumFactor * pg;\n    b_sum += sumFactor * pb;\n    a_sum += sumFactor * pa;\n    stack = stackStart;\n\n    for (i = 0; i < radiusPlus1; i++) {\n      stack.r = pr;\n      stack.g = pg;\n      stack.b = pb;\n      stack.a = pa;\n      stack = stack.next;\n    }\n\n    for (i = 1; i < radiusPlus1; i++) {\n      p = yi + ((widthMinus1 < i ? widthMinus1 : i) << 2);\n      r_sum += (stack.r = pr = pixels[p]) * (rbs = radiusPlus1 - i);\n      g_sum += (stack.g = pg = pixels[p + 1]) * rbs;\n      b_sum += (stack.b = pb = pixels[p + 2]) * rbs;\n      a_sum += (stack.a = pa = pixels[p + 3]) * rbs;\n      r_in_sum += pr;\n      g_in_sum += pg;\n      b_in_sum += pb;\n      a_in_sum += pa;\n      stack = stack.next;\n    }\n\n    stackIn = stackStart;\n    stackOut = stackEnd;\n\n    for (x = 0; x < width; x++) {\n      pixels[yi + 3] = pa = a_sum * mul_sum >> shg_sum;\n\n      if (pa !== 0) {\n        pa = 255 / pa;\n        pixels[yi] = (r_sum * mul_sum >> shg_sum) * pa;\n        pixels[yi + 1] = (g_sum * mul_sum >> shg_sum) * pa;\n        pixels[yi + 2] = (b_sum * mul_sum >> shg_sum) * pa;\n      } else {\n        pixels[yi] = pixels[yi + 1] = pixels[yi + 2] = 0;\n      }\n\n      r_sum -= r_out_sum;\n      g_sum -= g_out_sum;\n      b_sum -= b_out_sum;\n      a_sum -= a_out_sum;\n      r_out_sum -= stackIn.r;\n      g_out_sum -= stackIn.g;\n      b_out_sum -= stackIn.b;\n      a_out_sum -= stackIn.a;\n      p = yw + ((p = x + radius + 1) < widthMinus1 ? p : widthMinus1) << 2;\n      r_in_sum += stackIn.r = pixels[p];\n      g_in_sum += stackIn.g = pixels[p + 1];\n      b_in_sum += stackIn.b = pixels[p + 2];\n      a_in_sum += stackIn.a = pixels[p + 3];\n      r_sum += r_in_sum;\n      g_sum += g_in_sum;\n      b_sum += b_in_sum;\n      a_sum += a_in_sum;\n      stackIn = stackIn.next;\n      r_out_sum += pr = stackOut.r;\n      g_out_sum += pg = stackOut.g;\n      b_out_sum += pb = stackOut.b;\n      a_out_sum += pa = stackOut.a;\n      r_in_sum -= pr;\n      g_in_sum -= pg;\n      b_in_sum -= pb;\n      a_in_sum -= pa;\n      stackOut = stackOut.next;\n      yi += 4;\n    }\n\n    yw += width;\n  }\n\n  for (x = 0; x < width; x++) {\n    g_in_sum = b_in_sum = a_in_sum = r_in_sum = g_sum = b_sum = a_sum = r_sum = 0;\n    yi = x << 2;\n    r_out_sum = radiusPlus1 * (pr = pixels[yi]);\n    g_out_sum = radiusPlus1 * (pg = pixels[yi + 1]);\n    b_out_sum = radiusPlus1 * (pb = pixels[yi + 2]);\n    a_out_sum = radiusPlus1 * (pa = pixels[yi + 3]);\n    r_sum += sumFactor * pr;\n    g_sum += sumFactor * pg;\n    b_sum += sumFactor * pb;\n    a_sum += sumFactor * pa;\n    stack = stackStart;\n\n    for (i = 0; i < radiusPlus1; i++) {\n      stack.r = pr;\n      stack.g = pg;\n      stack.b = pb;\n      stack.a = pa;\n      stack = stack.next;\n    }\n\n    yp = width;\n\n    for (i = 1; i <= radius; i++) {\n      yi = yp + x << 2;\n      r_sum += (stack.r = pr = pixels[yi]) * (rbs = radiusPlus1 - i);\n      g_sum += (stack.g = pg = pixels[yi + 1]) * rbs;\n      b_sum += (stack.b = pb = pixels[yi + 2]) * rbs;\n      a_sum += (stack.a = pa = pixels[yi + 3]) * rbs;\n      r_in_sum += pr;\n      g_in_sum += pg;\n      b_in_sum += pb;\n      a_in_sum += pa;\n      stack = stack.next;\n\n      if (i < heightMinus1) {\n        yp += width;\n      }\n    }\n\n    yi = x;\n    stackIn = stackStart;\n    stackOut = stackEnd;\n\n    for (y = 0; y < height; y++) {\n      p = yi << 2;\n      pixels[p + 3] = pa = a_sum * mul_sum >> shg_sum;\n\n      if (pa > 0) {\n        pa = 255 / pa;\n        pixels[p] = (r_sum * mul_sum >> shg_sum) * pa;\n        pixels[p + 1] = (g_sum * mul_sum >> shg_sum) * pa;\n        pixels[p + 2] = (b_sum * mul_sum >> shg_sum) * pa;\n      } else {\n        pixels[p] = pixels[p + 1] = pixels[p + 2] = 0;\n      }\n\n      r_sum -= r_out_sum;\n      g_sum -= g_out_sum;\n      b_sum -= b_out_sum;\n      a_sum -= a_out_sum;\n      r_out_sum -= stackIn.r;\n      g_out_sum -= stackIn.g;\n      b_out_sum -= stackIn.b;\n      a_out_sum -= stackIn.a;\n      p = x + ((p = y + radiusPlus1) < heightMinus1 ? p : heightMinus1) * width << 2;\n      r_sum += r_in_sum += stackIn.r = pixels[p];\n      g_sum += g_in_sum += stackIn.g = pixels[p + 1];\n      b_sum += b_in_sum += stackIn.b = pixels[p + 2];\n      a_sum += a_in_sum += stackIn.a = pixels[p + 3];\n      stackIn = stackIn.next;\n      r_out_sum += pr = stackOut.r;\n      g_out_sum += pg = stackOut.g;\n      b_out_sum += pb = stackOut.b;\n      a_out_sum += pa = stackOut.a;\n      r_in_sum -= pr;\n      g_in_sum -= pg;\n      b_in_sum -= pb;\n      a_in_sum -= pa;\n      stackOut = stackOut.next;\n      yi += width;\n    }\n  }\n}\n\nexports.Blur = function Blur(imageData) {\n  var radius = Math.round(this.blurRadius());\n\n  if (radius > 0) {\n    filterGaussBlurRGBA(imageData, radius);\n  }\n};\n\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'blurRadius', 0, Validators_1.getNumberValidator(), Factory_1.Factory.afterSetFilter);","map":{"version":3,"sources":["/home/jun/foodbank/node_modules/konva/lib/filters/Blur.js"],"names":["Object","defineProperty","exports","value","Factory_1","require","Node_1","Validators_1","BlurStack","r","g","b","a","next","mul_table","shg_table","filterGaussBlurRGBA","imageData","radius","pixels","data","width","height","x","y","i","p","yp","yi","yw","r_sum","g_sum","b_sum","a_sum","r_out_sum","g_out_sum","b_out_sum","a_out_sum","r_in_sum","g_in_sum","b_in_sum","a_in_sum","pr","pg","pb","pa","rbs","div","widthMinus1","heightMinus1","radiusPlus1","sumFactor","stackStart","stackEnd","stack","stackIn","stackOut","mul_sum","shg_sum","Blur","Math","round","blurRadius","Factory","addGetterSetter","Node","getNumberValidator","afterSetFilter"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Factory_1 = require(\"../Factory\");\nvar Node_1 = require(\"../Node\");\nvar Validators_1 = require(\"../Validators\");\nfunction BlurStack() {\n    this.r = 0;\n    this.g = 0;\n    this.b = 0;\n    this.a = 0;\n    this.next = null;\n}\nvar mul_table = [\n    512,\n    512,\n    456,\n    512,\n    328,\n    456,\n    335,\n    512,\n    405,\n    328,\n    271,\n    456,\n    388,\n    335,\n    292,\n    512,\n    454,\n    405,\n    364,\n    328,\n    298,\n    271,\n    496,\n    456,\n    420,\n    388,\n    360,\n    335,\n    312,\n    292,\n    273,\n    512,\n    482,\n    454,\n    428,\n    405,\n    383,\n    364,\n    345,\n    328,\n    312,\n    298,\n    284,\n    271,\n    259,\n    496,\n    475,\n    456,\n    437,\n    420,\n    404,\n    388,\n    374,\n    360,\n    347,\n    335,\n    323,\n    312,\n    302,\n    292,\n    282,\n    273,\n    265,\n    512,\n    497,\n    482,\n    468,\n    454,\n    441,\n    428,\n    417,\n    405,\n    394,\n    383,\n    373,\n    364,\n    354,\n    345,\n    337,\n    328,\n    320,\n    312,\n    305,\n    298,\n    291,\n    284,\n    278,\n    271,\n    265,\n    259,\n    507,\n    496,\n    485,\n    475,\n    465,\n    456,\n    446,\n    437,\n    428,\n    420,\n    412,\n    404,\n    396,\n    388,\n    381,\n    374,\n    367,\n    360,\n    354,\n    347,\n    341,\n    335,\n    329,\n    323,\n    318,\n    312,\n    307,\n    302,\n    297,\n    292,\n    287,\n    282,\n    278,\n    273,\n    269,\n    265,\n    261,\n    512,\n    505,\n    497,\n    489,\n    482,\n    475,\n    468,\n    461,\n    454,\n    447,\n    441,\n    435,\n    428,\n    422,\n    417,\n    411,\n    405,\n    399,\n    394,\n    389,\n    383,\n    378,\n    373,\n    368,\n    364,\n    359,\n    354,\n    350,\n    345,\n    341,\n    337,\n    332,\n    328,\n    324,\n    320,\n    316,\n    312,\n    309,\n    305,\n    301,\n    298,\n    294,\n    291,\n    287,\n    284,\n    281,\n    278,\n    274,\n    271,\n    268,\n    265,\n    262,\n    259,\n    257,\n    507,\n    501,\n    496,\n    491,\n    485,\n    480,\n    475,\n    470,\n    465,\n    460,\n    456,\n    451,\n    446,\n    442,\n    437,\n    433,\n    428,\n    424,\n    420,\n    416,\n    412,\n    408,\n    404,\n    400,\n    396,\n    392,\n    388,\n    385,\n    381,\n    377,\n    374,\n    370,\n    367,\n    363,\n    360,\n    357,\n    354,\n    350,\n    347,\n    344,\n    341,\n    338,\n    335,\n    332,\n    329,\n    326,\n    323,\n    320,\n    318,\n    315,\n    312,\n    310,\n    307,\n    304,\n    302,\n    299,\n    297,\n    294,\n    292,\n    289,\n    287,\n    285,\n    282,\n    280,\n    278,\n    275,\n    273,\n    271,\n    269,\n    267,\n    265,\n    263,\n    261,\n    259\n];\nvar shg_table = [\n    9,\n    11,\n    12,\n    13,\n    13,\n    14,\n    14,\n    15,\n    15,\n    15,\n    15,\n    16,\n    16,\n    16,\n    16,\n    17,\n    17,\n    17,\n    17,\n    17,\n    17,\n    17,\n    18,\n    18,\n    18,\n    18,\n    18,\n    18,\n    18,\n    18,\n    18,\n    19,\n    19,\n    19,\n    19,\n    19,\n    19,\n    19,\n    19,\n    19,\n    19,\n    19,\n    19,\n    19,\n    19,\n    20,\n    20,\n    20,\n    20,\n    20,\n    20,\n    20,\n    20,\n    20,\n    20,\n    20,\n    20,\n    20,\n    20,\n    20,\n    20,\n    20,\n    20,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24\n];\nfunction filterGaussBlurRGBA(imageData, radius) {\n    var pixels = imageData.data, width = imageData.width, height = imageData.height;\n    var x, y, i, p, yp, yi, yw, r_sum, g_sum, b_sum, a_sum, r_out_sum, g_out_sum, b_out_sum, a_out_sum, r_in_sum, g_in_sum, b_in_sum, a_in_sum, pr, pg, pb, pa, rbs;\n    var div = radius + radius + 1, widthMinus1 = width - 1, heightMinus1 = height - 1, radiusPlus1 = radius + 1, sumFactor = (radiusPlus1 * (radiusPlus1 + 1)) / 2, stackStart = new BlurStack(), stackEnd = null, stack = stackStart, stackIn = null, stackOut = null, mul_sum = mul_table[radius], shg_sum = shg_table[radius];\n    for (i = 1; i < div; i++) {\n        stack = stack.next = new BlurStack();\n        if (i === radiusPlus1) {\n            stackEnd = stack;\n        }\n    }\n    stack.next = stackStart;\n    yw = yi = 0;\n    for (y = 0; y < height; y++) {\n        r_in_sum = g_in_sum = b_in_sum = a_in_sum = r_sum = g_sum = b_sum = a_sum = 0;\n        r_out_sum = radiusPlus1 * (pr = pixels[yi]);\n        g_out_sum = radiusPlus1 * (pg = pixels[yi + 1]);\n        b_out_sum = radiusPlus1 * (pb = pixels[yi + 2]);\n        a_out_sum = radiusPlus1 * (pa = pixels[yi + 3]);\n        r_sum += sumFactor * pr;\n        g_sum += sumFactor * pg;\n        b_sum += sumFactor * pb;\n        a_sum += sumFactor * pa;\n        stack = stackStart;\n        for (i = 0; i < radiusPlus1; i++) {\n            stack.r = pr;\n            stack.g = pg;\n            stack.b = pb;\n            stack.a = pa;\n            stack = stack.next;\n        }\n        for (i = 1; i < radiusPlus1; i++) {\n            p = yi + ((widthMinus1 < i ? widthMinus1 : i) << 2);\n            r_sum += (stack.r = pr = pixels[p]) * (rbs = radiusPlus1 - i);\n            g_sum += (stack.g = pg = pixels[p + 1]) * rbs;\n            b_sum += (stack.b = pb = pixels[p + 2]) * rbs;\n            a_sum += (stack.a = pa = pixels[p + 3]) * rbs;\n            r_in_sum += pr;\n            g_in_sum += pg;\n            b_in_sum += pb;\n            a_in_sum += pa;\n            stack = stack.next;\n        }\n        stackIn = stackStart;\n        stackOut = stackEnd;\n        for (x = 0; x < width; x++) {\n            pixels[yi + 3] = pa = (a_sum * mul_sum) >> shg_sum;\n            if (pa !== 0) {\n                pa = 255 / pa;\n                pixels[yi] = ((r_sum * mul_sum) >> shg_sum) * pa;\n                pixels[yi + 1] = ((g_sum * mul_sum) >> shg_sum) * pa;\n                pixels[yi + 2] = ((b_sum * mul_sum) >> shg_sum) * pa;\n            }\n            else {\n                pixels[yi] = pixels[yi + 1] = pixels[yi + 2] = 0;\n            }\n            r_sum -= r_out_sum;\n            g_sum -= g_out_sum;\n            b_sum -= b_out_sum;\n            a_sum -= a_out_sum;\n            r_out_sum -= stackIn.r;\n            g_out_sum -= stackIn.g;\n            b_out_sum -= stackIn.b;\n            a_out_sum -= stackIn.a;\n            p = (yw + ((p = x + radius + 1) < widthMinus1 ? p : widthMinus1)) << 2;\n            r_in_sum += stackIn.r = pixels[p];\n            g_in_sum += stackIn.g = pixels[p + 1];\n            b_in_sum += stackIn.b = pixels[p + 2];\n            a_in_sum += stackIn.a = pixels[p + 3];\n            r_sum += r_in_sum;\n            g_sum += g_in_sum;\n            b_sum += b_in_sum;\n            a_sum += a_in_sum;\n            stackIn = stackIn.next;\n            r_out_sum += pr = stackOut.r;\n            g_out_sum += pg = stackOut.g;\n            b_out_sum += pb = stackOut.b;\n            a_out_sum += pa = stackOut.a;\n            r_in_sum -= pr;\n            g_in_sum -= pg;\n            b_in_sum -= pb;\n            a_in_sum -= pa;\n            stackOut = stackOut.next;\n            yi += 4;\n        }\n        yw += width;\n    }\n    for (x = 0; x < width; x++) {\n        g_in_sum = b_in_sum = a_in_sum = r_in_sum = g_sum = b_sum = a_sum = r_sum = 0;\n        yi = x << 2;\n        r_out_sum = radiusPlus1 * (pr = pixels[yi]);\n        g_out_sum = radiusPlus1 * (pg = pixels[yi + 1]);\n        b_out_sum = radiusPlus1 * (pb = pixels[yi + 2]);\n        a_out_sum = radiusPlus1 * (pa = pixels[yi + 3]);\n        r_sum += sumFactor * pr;\n        g_sum += sumFactor * pg;\n        b_sum += sumFactor * pb;\n        a_sum += sumFactor * pa;\n        stack = stackStart;\n        for (i = 0; i < radiusPlus1; i++) {\n            stack.r = pr;\n            stack.g = pg;\n            stack.b = pb;\n            stack.a = pa;\n            stack = stack.next;\n        }\n        yp = width;\n        for (i = 1; i <= radius; i++) {\n            yi = (yp + x) << 2;\n            r_sum += (stack.r = pr = pixels[yi]) * (rbs = radiusPlus1 - i);\n            g_sum += (stack.g = pg = pixels[yi + 1]) * rbs;\n            b_sum += (stack.b = pb = pixels[yi + 2]) * rbs;\n            a_sum += (stack.a = pa = pixels[yi + 3]) * rbs;\n            r_in_sum += pr;\n            g_in_sum += pg;\n            b_in_sum += pb;\n            a_in_sum += pa;\n            stack = stack.next;\n            if (i < heightMinus1) {\n                yp += width;\n            }\n        }\n        yi = x;\n        stackIn = stackStart;\n        stackOut = stackEnd;\n        for (y = 0; y < height; y++) {\n            p = yi << 2;\n            pixels[p + 3] = pa = (a_sum * mul_sum) >> shg_sum;\n            if (pa > 0) {\n                pa = 255 / pa;\n                pixels[p] = ((r_sum * mul_sum) >> shg_sum) * pa;\n                pixels[p + 1] = ((g_sum * mul_sum) >> shg_sum) * pa;\n                pixels[p + 2] = ((b_sum * mul_sum) >> shg_sum) * pa;\n            }\n            else {\n                pixels[p] = pixels[p + 1] = pixels[p + 2] = 0;\n            }\n            r_sum -= r_out_sum;\n            g_sum -= g_out_sum;\n            b_sum -= b_out_sum;\n            a_sum -= a_out_sum;\n            r_out_sum -= stackIn.r;\n            g_out_sum -= stackIn.g;\n            b_out_sum -= stackIn.b;\n            a_out_sum -= stackIn.a;\n            p =\n                (x +\n                    ((p = y + radiusPlus1) < heightMinus1 ? p : heightMinus1) * width) <<\n                    2;\n            r_sum += r_in_sum += stackIn.r = pixels[p];\n            g_sum += g_in_sum += stackIn.g = pixels[p + 1];\n            b_sum += b_in_sum += stackIn.b = pixels[p + 2];\n            a_sum += a_in_sum += stackIn.a = pixels[p + 3];\n            stackIn = stackIn.next;\n            r_out_sum += pr = stackOut.r;\n            g_out_sum += pg = stackOut.g;\n            b_out_sum += pb = stackOut.b;\n            a_out_sum += pa = stackOut.a;\n            r_in_sum -= pr;\n            g_in_sum -= pg;\n            b_in_sum -= pb;\n            a_in_sum -= pa;\n            stackOut = stackOut.next;\n            yi += width;\n        }\n    }\n}\nexports.Blur = function Blur(imageData) {\n    var radius = Math.round(this.blurRadius());\n    if (radius > 0) {\n        filterGaussBlurRGBA(imageData, radius);\n    }\n};\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'blurRadius', 0, Validators_1.getNumberValidator(), Factory_1.Factory.afterSetFilter);\n"]},"metadata":{},"sourceType":"script"}