{"ast":null,"code":"import { isUndefined } from './utils';\nimport { translate } from './translate';\nimport { transform } from './transform';\nconst {\n  cos,\n  sin,\n  PI\n} = Math;\n/**\n * Calculate a rotation matrix\n * @param angle {number} Angle in radians\n * @param [cx] {number} If (cx,cy) are supplied the rotate is about this point\n * @param [cy] {number} If (cx,cy) are supplied the rotate is about this point\n * @returns {Matrix} Affine Matrix\n */\n\nexport function rotate(angle, cx, cy) {\n  const cosAngle = cos(angle);\n  const sinAngle = sin(angle);\n  const rotationMatrix = {\n    a: cosAngle,\n    c: -sinAngle,\n    e: 0,\n    b: sinAngle,\n    d: cosAngle,\n    f: 0\n  };\n\n  if (isUndefined(cx) || isUndefined(cy)) {\n    return rotationMatrix;\n  }\n\n  return transform([translate(cx, cy), rotationMatrix, translate(-cx, -cy)]);\n}\n/**\n * Calculate a rotation matrix with a DEG angle\n * @param angle {number} Angle in degree\n * @param [cx] {number} If (cx,cy) are supplied the rotate is about this point\n * @param [cy] {number} If (cx,cy) are supplied the rotate is about this point\n * @returns {Matrix} Affine Matrix\n */\n\nexport function rotateDEG(angle, cx = undefined, cy = undefined) {\n  return rotate(angle * PI / 180, cx, cy);\n}","map":{"version":3,"sources":["/home/jun/foodbank/node_modules/transformation-matrix/src/rotate.js"],"names":["isUndefined","translate","transform","cos","sin","PI","Math","rotate","angle","cx","cy","cosAngle","sinAngle","rotationMatrix","a","c","e","b","d","f","rotateDEG","undefined"],"mappings":"AAAA,SAASA,WAAT,QAA4B,SAA5B;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,MAAM;AAAEC,EAAAA,GAAF;AAAOC,EAAAA,GAAP;AAAYC,EAAAA;AAAZ,IAAmBC,IAAzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,MAAT,CAAiBC,KAAjB,EAAwBC,EAAxB,EAA4BC,EAA5B,EAAgC;AACrC,QAAMC,QAAQ,GAAGR,GAAG,CAACK,KAAD,CAApB;AACA,QAAMI,QAAQ,GAAGR,GAAG,CAACI,KAAD,CAApB;AACA,QAAMK,cAAc,GAAG;AACrBC,IAAAA,CAAC,EAAEH,QADkB;AAErBI,IAAAA,CAAC,EAAE,CAACH,QAFiB;AAGrBI,IAAAA,CAAC,EAAE,CAHkB;AAIrBC,IAAAA,CAAC,EAAEL,QAJkB;AAKrBM,IAAAA,CAAC,EAAEP,QALkB;AAMrBQ,IAAAA,CAAC,EAAE;AANkB,GAAvB;;AAQA,MAAInB,WAAW,CAACS,EAAD,CAAX,IAAmBT,WAAW,CAACU,EAAD,CAAlC,EAAwC;AACtC,WAAOG,cAAP;AACD;;AAED,SAAOX,SAAS,CAAC,CACfD,SAAS,CAACQ,EAAD,EAAKC,EAAL,CADM,EAEfG,cAFe,EAGfZ,SAAS,CAAC,CAACQ,EAAF,EAAM,CAACC,EAAP,CAHM,CAAD,CAAhB;AAKD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASU,SAAT,CAAoBZ,KAApB,EAA2BC,EAAE,GAAGY,SAAhC,EAA2CX,EAAE,GAAGW,SAAhD,EAA2D;AAChE,SAAOd,MAAM,CAACC,KAAK,GAAGH,EAAR,GAAa,GAAd,EAAmBI,EAAnB,EAAuBC,EAAvB,CAAb;AACD","sourcesContent":["import { isUndefined } from './utils'\nimport { translate } from './translate'\nimport { transform } from './transform'\n\nconst { cos, sin, PI } = Math\n/**\n * Calculate a rotation matrix\n * @param angle {number} Angle in radians\n * @param [cx] {number} If (cx,cy) are supplied the rotate is about this point\n * @param [cy] {number} If (cx,cy) are supplied the rotate is about this point\n * @returns {Matrix} Affine Matrix\n */\nexport function rotate (angle, cx, cy) {\n  const cosAngle = cos(angle)\n  const sinAngle = sin(angle)\n  const rotationMatrix = {\n    a: cosAngle,\n    c: -sinAngle,\n    e: 0,\n    b: sinAngle,\n    d: cosAngle,\n    f: 0\n  }\n  if (isUndefined(cx) || isUndefined(cy)) {\n    return rotationMatrix\n  }\n\n  return transform([\n    translate(cx, cy),\n    rotationMatrix,\n    translate(-cx, -cy)\n  ])\n}\n\n/**\n * Calculate a rotation matrix with a DEG angle\n * @param angle {number} Angle in degree\n * @param [cx] {number} If (cx,cy) are supplied the rotate is about this point\n * @param [cy] {number} If (cx,cy) are supplied the rotate is about this point\n * @returns {Matrix} Affine Matrix\n */\nexport function rotateDEG (angle, cx = undefined, cy = undefined) {\n  return rotate(angle * PI / 180, cx, cy)\n}\n"]},"metadata":{},"sourceType":"module"}