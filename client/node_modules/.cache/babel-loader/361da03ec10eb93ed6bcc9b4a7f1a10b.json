{"ast":null,"code":"import { isUndefined } from './utils';\nimport { translate } from './translate';\nimport { transform } from './transform';\n/**\n * Calculate a scaling matrix\n * @param sx {number} Scaling on axis x\n * @param [sy = sx] {number} Scaling on axis y (default sx)\n * @param [cx] {number} If (cx,cy) are supplied the scaling is about this point\n * @param [cy] {number} If (cx,cy) are supplied the scaling is about this point\n * @returns {Matrix} Affine Matrix\n */\n\nexport function scale(sx, sy = undefined, cx = undefined, cy = undefined) {\n  if (isUndefined(sy)) sy = sx;\n  const scaleMatrix = {\n    a: sx,\n    c: 0,\n    e: 0,\n    b: 0,\n    d: sy,\n    f: 0\n  };\n\n  if (isUndefined(cx) || isUndefined(cy)) {\n    return scaleMatrix;\n  }\n\n  return transform([translate(cx, cy), scaleMatrix, translate(-cx, -cy)]);\n}","map":{"version":3,"sources":["/home/jun/foodbank/node_modules/transformation-matrix/src/scale.js"],"names":["isUndefined","translate","transform","scale","sx","sy","undefined","cx","cy","scaleMatrix","a","c","e","b","d","f"],"mappings":"AAAA,SAASA,WAAT,QAA4B,SAA5B;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,KAAT,CAAgBC,EAAhB,EAAoBC,EAAE,GAAGC,SAAzB,EAAoCC,EAAE,GAAGD,SAAzC,EAAoDE,EAAE,GAAGF,SAAzD,EAAoE;AACzE,MAAIN,WAAW,CAACK,EAAD,CAAf,EAAqBA,EAAE,GAAGD,EAAL;AAErB,QAAMK,WAAW,GAAG;AAClBC,IAAAA,CAAC,EAAEN,EADe;AAElBO,IAAAA,CAAC,EAAE,CAFe;AAGlBC,IAAAA,CAAC,EAAE,CAHe;AAIlBC,IAAAA,CAAC,EAAE,CAJe;AAKlBC,IAAAA,CAAC,EAAET,EALe;AAMlBU,IAAAA,CAAC,EAAE;AANe,GAApB;;AASA,MAAIf,WAAW,CAACO,EAAD,CAAX,IAAmBP,WAAW,CAACQ,EAAD,CAAlC,EAAwC;AACtC,WAAOC,WAAP;AACD;;AAED,SAAOP,SAAS,CAAC,CACfD,SAAS,CAACM,EAAD,EAAKC,EAAL,CADM,EAEfC,WAFe,EAGfR,SAAS,CAAC,CAACM,EAAF,EAAM,CAACC,EAAP,CAHM,CAAD,CAAhB;AAKD","sourcesContent":["import { isUndefined } from './utils'\nimport { translate } from './translate'\nimport { transform } from './transform'\n\n/**\n * Calculate a scaling matrix\n * @param sx {number} Scaling on axis x\n * @param [sy = sx] {number} Scaling on axis y (default sx)\n * @param [cx] {number} If (cx,cy) are supplied the scaling is about this point\n * @param [cy] {number} If (cx,cy) are supplied the scaling is about this point\n * @returns {Matrix} Affine Matrix\n */\nexport function scale (sx, sy = undefined, cx = undefined, cy = undefined) {\n  if (isUndefined(sy)) sy = sx\n\n  const scaleMatrix = {\n    a: sx,\n    c: 0,\n    e: 0,\n    b: 0,\n    d: sy,\n    f: 0\n  }\n\n  if (isUndefined(cx) || isUndefined(cy)) {\n    return scaleMatrix\n  }\n\n  return transform([\n    translate(cx, cy),\n    scaleMatrix,\n    translate(-cx, -cy)\n  ])\n}\n"]},"metadata":{},"sourceType":"module"}