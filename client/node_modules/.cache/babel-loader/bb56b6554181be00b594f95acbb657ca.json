{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/jun/foodbank/client/src/index.tsx\";\nimport React from 'react';\nimport { hydrate, render } from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport reportWebVitals from 'Utils/reportWebVitals';\nimport App from 'App';\nimport './index.css';\nimport 'animate.css';\nconst rootElement = document.getElementById('root');\n\nconst Application = () => /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 12,\n  columnNumber: 3\n}, this);\n\n_c = Application;\n\nif (rootElement === null || rootElement === void 0 ? void 0 : rootElement.hasChildNodes()) {\n  hydrate( /*#__PURE__*/_jsxDEV(Application, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 11\n  }, this), rootElement);\n} else {\n  render( /*#__PURE__*/_jsxDEV(Application, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 10\n  }, this), rootElement);\n} // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n\nreportWebVitals();\n\nvar _c;\n\n$RefreshReg$(_c, \"Application\");","map":{"version":3,"sources":["/home/jun/foodbank/client/src/index.tsx"],"names":["React","hydrate","render","BrowserRouter","reportWebVitals","App","rootElement","document","getElementById","Application","hasChildNodes"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,EAAkBC,MAAlB,QAAgC,WAAhC;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,OAAOC,eAAP,MAA4B,uBAA5B;AACA,OAAOC,GAAP,MAAgB,KAAhB;AACA,OAAO,aAAP;AACA,OAAO,aAAP;AAEA,MAAMC,WAAW,GAAGC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAApB;;AAEA,MAAMC,WAAW,GAAG,mBAClB,QAAC,KAAD,CAAO,UAAP;AAAA,yBACE,QAAC,aAAD;AAAA,2BACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADF;;KAAMA,W;;AAQN,IAAIH,WAAJ,aAAIA,WAAJ,uBAAIA,WAAW,CAAEI,aAAb,EAAJ,EAAkC;AAChCT,EAAAA,OAAO,eAAC,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,UAAD,EAAkBK,WAAlB,CAAP;AACD,CAFD,MAEO;AACLJ,EAAAA,MAAM,eAAC,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,UAAD,EAAkBI,WAAlB,CAAN;AACD,C,CAED;AACA;AACA;;;AACAF,eAAe","sourcesContent":["import React from 'react'\nimport { hydrate, render } from 'react-dom'\nimport { BrowserRouter } from 'react-router-dom'\nimport reportWebVitals from 'Utils/reportWebVitals'\nimport App from 'App'\nimport './index.css'\nimport 'animate.css'\n\nconst rootElement = document.getElementById('root')\n\nconst Application = () => (\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>\n)\n\nif (rootElement?.hasChildNodes()) {\n  hydrate(<Application />, rootElement)\n} else {\n  render(<Application />, rootElement)\n}\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"]},"metadata":{},"sourceType":"module"}