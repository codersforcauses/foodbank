{"ast":null,"code":"/**\n * Merge multiple matrices into one\n * @param matrices {...Matrix | Matrix[]} Matrices listed as separate parameters or in an array\n * @returns {Matrix} Affine Matrix\n */\nexport function transform(...matrices) {\n  matrices = Array.isArray(matrices[0]) ? matrices[0] : matrices;\n\n  const multiply = (m1, m2) => {\n    return {\n      a: m1.a * m2.a + m1.c * m2.b,\n      c: m1.a * m2.c + m1.c * m2.d,\n      e: m1.a * m2.e + m1.c * m2.f + m1.e,\n      b: m1.b * m2.a + m1.d * m2.b,\n      d: m1.b * m2.c + m1.d * m2.d,\n      f: m1.b * m2.e + m1.d * m2.f + m1.f\n    };\n  };\n\n  switch (matrices.length) {\n    case 0:\n      throw new Error('no matrices provided');\n\n    case 1:\n      return matrices[0];\n\n    case 2:\n      return multiply(matrices[0], matrices[1]);\n\n    default:\n      {\n        const [m1, m2, ...rest] = matrices;\n        const m = multiply(m1, m2);\n        return transform(m, ...rest);\n      }\n  }\n}\n/**\n * Merge multiple matrices into one\n * @param matrices {...Matrix | Matrix[]} Matrices listed as separate parameters or in an array\n * @returns {Matrix} Affine Matrix\n */\n\nexport function compose(...matrices) {\n  return transform(...matrices);\n}","map":{"version":3,"sources":["/home/jun/foodbank/node_modules/transformation-matrix/src/transform.js"],"names":["transform","matrices","Array","isArray","multiply","m1","m2","a","c","b","d","e","f","length","Error","rest","m","compose"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,SAAT,CAAoB,GAAGC,QAAvB,EAAiC;AACtCA,EAAAA,QAAQ,GAAGC,KAAK,CAACC,OAAN,CAAcF,QAAQ,CAAC,CAAD,CAAtB,IAA6BA,QAAQ,CAAC,CAAD,CAArC,GAA2CA,QAAtD;;AAEA,QAAMG,QAAQ,GAAG,CAACC,EAAD,EAAKC,EAAL,KAAY;AAC3B,WAAO;AACLC,MAAAA,CAAC,EAAEF,EAAE,CAACE,CAAH,GAAOD,EAAE,CAACC,CAAV,GAAcF,EAAE,CAACG,CAAH,GAAOF,EAAE,CAACG,CADtB;AAELD,MAAAA,CAAC,EAAEH,EAAE,CAACE,CAAH,GAAOD,EAAE,CAACE,CAAV,GAAcH,EAAE,CAACG,CAAH,GAAOF,EAAE,CAACI,CAFtB;AAGLC,MAAAA,CAAC,EAAEN,EAAE,CAACE,CAAH,GAAOD,EAAE,CAACK,CAAV,GAAcN,EAAE,CAACG,CAAH,GAAOF,EAAE,CAACM,CAAxB,GAA4BP,EAAE,CAACM,CAH7B;AAILF,MAAAA,CAAC,EAAEJ,EAAE,CAACI,CAAH,GAAOH,EAAE,CAACC,CAAV,GAAcF,EAAE,CAACK,CAAH,GAAOJ,EAAE,CAACG,CAJtB;AAKLC,MAAAA,CAAC,EAAEL,EAAE,CAACI,CAAH,GAAOH,EAAE,CAACE,CAAV,GAAcH,EAAE,CAACK,CAAH,GAAOJ,EAAE,CAACI,CALtB;AAMLE,MAAAA,CAAC,EAAEP,EAAE,CAACI,CAAH,GAAOH,EAAE,CAACK,CAAV,GAAcN,EAAE,CAACK,CAAH,GAAOJ,EAAE,CAACM,CAAxB,GAA4BP,EAAE,CAACO;AAN7B,KAAP;AAQD,GATD;;AAWA,UAAQX,QAAQ,CAACY,MAAjB;AACE,SAAK,CAAL;AACE,YAAM,IAAIC,KAAJ,CAAU,sBAAV,CAAN;;AAEF,SAAK,CAAL;AACE,aAAOb,QAAQ,CAAC,CAAD,CAAf;;AAEF,SAAK,CAAL;AACE,aAAOG,QAAQ,CAACH,QAAQ,CAAC,CAAD,CAAT,EAAcA,QAAQ,CAAC,CAAD,CAAtB,CAAf;;AAEF;AAAS;AACP,cAAM,CAACI,EAAD,EAAKC,EAAL,EAAS,GAAGS,IAAZ,IAAoBd,QAA1B;AACA,cAAMe,CAAC,GAAGZ,QAAQ,CAACC,EAAD,EAAKC,EAAL,CAAlB;AACA,eAAON,SAAS,CAACgB,CAAD,EAAI,GAAGD,IAAP,CAAhB;AACD;AAdH;AAgBD;AAED;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASE,OAAT,CAAkB,GAAGhB,QAArB,EAA+B;AACpC,SAAOD,SAAS,CAAC,GAAGC,QAAJ,CAAhB;AACD","sourcesContent":["/**\n * Merge multiple matrices into one\n * @param matrices {...Matrix | Matrix[]} Matrices listed as separate parameters or in an array\n * @returns {Matrix} Affine Matrix\n */\nexport function transform (...matrices) {\n  matrices = Array.isArray(matrices[0]) ? matrices[0] : matrices\n\n  const multiply = (m1, m2) => {\n    return {\n      a: m1.a * m2.a + m1.c * m2.b,\n      c: m1.a * m2.c + m1.c * m2.d,\n      e: m1.a * m2.e + m1.c * m2.f + m1.e,\n      b: m1.b * m2.a + m1.d * m2.b,\n      d: m1.b * m2.c + m1.d * m2.d,\n      f: m1.b * m2.e + m1.d * m2.f + m1.f\n    }\n  }\n\n  switch (matrices.length) {\n    case 0:\n      throw new Error('no matrices provided')\n\n    case 1:\n      return matrices[0]\n\n    case 2:\n      return multiply(matrices[0], matrices[1])\n\n    default: {\n      const [m1, m2, ...rest] = matrices\n      const m = multiply(m1, m2)\n      return transform(m, ...rest)\n    }\n  }\n}\n\n/**\n * Merge multiple matrices into one\n * @param matrices {...Matrix | Matrix[]} Matrices listed as separate parameters or in an array\n * @returns {Matrix} Affine Matrix\n */\nexport function compose (...matrices) {\n  return transform(...matrices)\n}\n"]},"metadata":{},"sourceType":"module"}