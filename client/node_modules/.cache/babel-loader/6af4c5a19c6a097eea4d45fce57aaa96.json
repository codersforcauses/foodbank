{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar Factory_1 = require(\"../Factory\");\n\nvar Node_1 = require(\"../Node\");\n\nvar Validators_1 = require(\"../Validators\");\n\nfunction pixelAt(idata, x, y) {\n  var idx = (y * idata.width + x) * 4;\n  var d = [];\n  d.push(idata.data[idx++], idata.data[idx++], idata.data[idx++], idata.data[idx++]);\n  return d;\n}\n\nfunction rgbDistance(p1, p2) {\n  return Math.sqrt(Math.pow(p1[0] - p2[0], 2) + Math.pow(p1[1] - p2[1], 2) + Math.pow(p1[2] - p2[2], 2));\n}\n\nfunction rgbMean(pTab) {\n  var m = [0, 0, 0];\n\n  for (var i = 0; i < pTab.length; i++) {\n    m[0] += pTab[i][0];\n    m[1] += pTab[i][1];\n    m[2] += pTab[i][2];\n  }\n\n  m[0] /= pTab.length;\n  m[1] /= pTab.length;\n  m[2] /= pTab.length;\n  return m;\n}\n\nfunction backgroundMask(idata, threshold) {\n  var rgbv_no = pixelAt(idata, 0, 0);\n  var rgbv_ne = pixelAt(idata, idata.width - 1, 0);\n  var rgbv_so = pixelAt(idata, 0, idata.height - 1);\n  var rgbv_se = pixelAt(idata, idata.width - 1, idata.height - 1);\n  var thres = threshold || 10;\n\n  if (rgbDistance(rgbv_no, rgbv_ne) < thres && rgbDistance(rgbv_ne, rgbv_se) < thres && rgbDistance(rgbv_se, rgbv_so) < thres && rgbDistance(rgbv_so, rgbv_no) < thres) {\n    var mean = rgbMean([rgbv_ne, rgbv_no, rgbv_se, rgbv_so]);\n    var mask = [];\n\n    for (var i = 0; i < idata.width * idata.height; i++) {\n      var d = rgbDistance(mean, [idata.data[i * 4], idata.data[i * 4 + 1], idata.data[i * 4 + 2]]);\n      mask[i] = d < thres ? 0 : 255;\n    }\n\n    return mask;\n  }\n}\n\nfunction applyMask(idata, mask) {\n  for (var i = 0; i < idata.width * idata.height; i++) {\n    idata.data[4 * i + 3] = mask[i];\n  }\n}\n\nfunction erodeMask(mask, sw, sh) {\n  var weights = [1, 1, 1, 1, 0, 1, 1, 1, 1];\n  var side = Math.round(Math.sqrt(weights.length));\n  var halfSide = Math.floor(side / 2);\n  var maskResult = [];\n\n  for (var y = 0; y < sh; y++) {\n    for (var x = 0; x < sw; x++) {\n      var so = y * sw + x;\n      var a = 0;\n\n      for (var cy = 0; cy < side; cy++) {\n        for (var cx = 0; cx < side; cx++) {\n          var scy = y + cy - halfSide;\n          var scx = x + cx - halfSide;\n\n          if (scy >= 0 && scy < sh && scx >= 0 && scx < sw) {\n            var srcOff = scy * sw + scx;\n            var wt = weights[cy * side + cx];\n            a += mask[srcOff] * wt;\n          }\n        }\n      }\n\n      maskResult[so] = a === 255 * 8 ? 255 : 0;\n    }\n  }\n\n  return maskResult;\n}\n\nfunction dilateMask(mask, sw, sh) {\n  var weights = [1, 1, 1, 1, 1, 1, 1, 1, 1];\n  var side = Math.round(Math.sqrt(weights.length));\n  var halfSide = Math.floor(side / 2);\n  var maskResult = [];\n\n  for (var y = 0; y < sh; y++) {\n    for (var x = 0; x < sw; x++) {\n      var so = y * sw + x;\n      var a = 0;\n\n      for (var cy = 0; cy < side; cy++) {\n        for (var cx = 0; cx < side; cx++) {\n          var scy = y + cy - halfSide;\n          var scx = x + cx - halfSide;\n\n          if (scy >= 0 && scy < sh && scx >= 0 && scx < sw) {\n            var srcOff = scy * sw + scx;\n            var wt = weights[cy * side + cx];\n            a += mask[srcOff] * wt;\n          }\n        }\n      }\n\n      maskResult[so] = a >= 255 * 4 ? 255 : 0;\n    }\n  }\n\n  return maskResult;\n}\n\nfunction smoothEdgeMask(mask, sw, sh) {\n  var weights = [1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9];\n  var side = Math.round(Math.sqrt(weights.length));\n  var halfSide = Math.floor(side / 2);\n  var maskResult = [];\n\n  for (var y = 0; y < sh; y++) {\n    for (var x = 0; x < sw; x++) {\n      var so = y * sw + x;\n      var a = 0;\n\n      for (var cy = 0; cy < side; cy++) {\n        for (var cx = 0; cx < side; cx++) {\n          var scy = y + cy - halfSide;\n          var scx = x + cx - halfSide;\n\n          if (scy >= 0 && scy < sh && scx >= 0 && scx < sw) {\n            var srcOff = scy * sw + scx;\n            var wt = weights[cy * side + cx];\n            a += mask[srcOff] * wt;\n          }\n        }\n      }\n\n      maskResult[so] = a;\n    }\n  }\n\n  return maskResult;\n}\n\nexports.Mask = function (imageData) {\n  var threshold = this.threshold(),\n      mask = backgroundMask(imageData, threshold);\n\n  if (mask) {\n    mask = erodeMask(mask, imageData.width, imageData.height);\n    mask = dilateMask(mask, imageData.width, imageData.height);\n    mask = smoothEdgeMask(mask, imageData.width, imageData.height);\n    applyMask(imageData, mask);\n  }\n\n  return imageData;\n};\n\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'threshold', 0, Validators_1.getNumberValidator(), Factory_1.Factory.afterSetFilter);","map":{"version":3,"sources":["/home/jun/foodbank/node_modules/konva/lib/filters/Mask.js"],"names":["Object","defineProperty","exports","value","Factory_1","require","Node_1","Validators_1","pixelAt","idata","x","y","idx","width","d","push","data","rgbDistance","p1","p2","Math","sqrt","pow","rgbMean","pTab","m","i","length","backgroundMask","threshold","rgbv_no","rgbv_ne","rgbv_so","height","rgbv_se","thres","mean","mask","applyMask","erodeMask","sw","sh","weights","side","round","halfSide","floor","maskResult","so","a","cy","cx","scy","scx","srcOff","wt","dilateMask","smoothEdgeMask","Mask","imageData","Factory","addGetterSetter","Node","getNumberValidator","afterSetFilter"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Factory_1 = require(\"../Factory\");\nvar Node_1 = require(\"../Node\");\nvar Validators_1 = require(\"../Validators\");\nfunction pixelAt(idata, x, y) {\n    var idx = (y * idata.width + x) * 4;\n    var d = [];\n    d.push(idata.data[idx++], idata.data[idx++], idata.data[idx++], idata.data[idx++]);\n    return d;\n}\nfunction rgbDistance(p1, p2) {\n    return Math.sqrt(Math.pow(p1[0] - p2[0], 2) +\n        Math.pow(p1[1] - p2[1], 2) +\n        Math.pow(p1[2] - p2[2], 2));\n}\nfunction rgbMean(pTab) {\n    var m = [0, 0, 0];\n    for (var i = 0; i < pTab.length; i++) {\n        m[0] += pTab[i][0];\n        m[1] += pTab[i][1];\n        m[2] += pTab[i][2];\n    }\n    m[0] /= pTab.length;\n    m[1] /= pTab.length;\n    m[2] /= pTab.length;\n    return m;\n}\nfunction backgroundMask(idata, threshold) {\n    var rgbv_no = pixelAt(idata, 0, 0);\n    var rgbv_ne = pixelAt(idata, idata.width - 1, 0);\n    var rgbv_so = pixelAt(idata, 0, idata.height - 1);\n    var rgbv_se = pixelAt(idata, idata.width - 1, idata.height - 1);\n    var thres = threshold || 10;\n    if (rgbDistance(rgbv_no, rgbv_ne) < thres &&\n        rgbDistance(rgbv_ne, rgbv_se) < thres &&\n        rgbDistance(rgbv_se, rgbv_so) < thres &&\n        rgbDistance(rgbv_so, rgbv_no) < thres) {\n        var mean = rgbMean([rgbv_ne, rgbv_no, rgbv_se, rgbv_so]);\n        var mask = [];\n        for (var i = 0; i < idata.width * idata.height; i++) {\n            var d = rgbDistance(mean, [\n                idata.data[i * 4],\n                idata.data[i * 4 + 1],\n                idata.data[i * 4 + 2]\n            ]);\n            mask[i] = d < thres ? 0 : 255;\n        }\n        return mask;\n    }\n}\nfunction applyMask(idata, mask) {\n    for (var i = 0; i < idata.width * idata.height; i++) {\n        idata.data[4 * i + 3] = mask[i];\n    }\n}\nfunction erodeMask(mask, sw, sh) {\n    var weights = [1, 1, 1, 1, 0, 1, 1, 1, 1];\n    var side = Math.round(Math.sqrt(weights.length));\n    var halfSide = Math.floor(side / 2);\n    var maskResult = [];\n    for (var y = 0; y < sh; y++) {\n        for (var x = 0; x < sw; x++) {\n            var so = y * sw + x;\n            var a = 0;\n            for (var cy = 0; cy < side; cy++) {\n                for (var cx = 0; cx < side; cx++) {\n                    var scy = y + cy - halfSide;\n                    var scx = x + cx - halfSide;\n                    if (scy >= 0 && scy < sh && scx >= 0 && scx < sw) {\n                        var srcOff = scy * sw + scx;\n                        var wt = weights[cy * side + cx];\n                        a += mask[srcOff] * wt;\n                    }\n                }\n            }\n            maskResult[so] = a === 255 * 8 ? 255 : 0;\n        }\n    }\n    return maskResult;\n}\nfunction dilateMask(mask, sw, sh) {\n    var weights = [1, 1, 1, 1, 1, 1, 1, 1, 1];\n    var side = Math.round(Math.sqrt(weights.length));\n    var halfSide = Math.floor(side / 2);\n    var maskResult = [];\n    for (var y = 0; y < sh; y++) {\n        for (var x = 0; x < sw; x++) {\n            var so = y * sw + x;\n            var a = 0;\n            for (var cy = 0; cy < side; cy++) {\n                for (var cx = 0; cx < side; cx++) {\n                    var scy = y + cy - halfSide;\n                    var scx = x + cx - halfSide;\n                    if (scy >= 0 && scy < sh && scx >= 0 && scx < sw) {\n                        var srcOff = scy * sw + scx;\n                        var wt = weights[cy * side + cx];\n                        a += mask[srcOff] * wt;\n                    }\n                }\n            }\n            maskResult[so] = a >= 255 * 4 ? 255 : 0;\n        }\n    }\n    return maskResult;\n}\nfunction smoothEdgeMask(mask, sw, sh) {\n    var weights = [1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9];\n    var side = Math.round(Math.sqrt(weights.length));\n    var halfSide = Math.floor(side / 2);\n    var maskResult = [];\n    for (var y = 0; y < sh; y++) {\n        for (var x = 0; x < sw; x++) {\n            var so = y * sw + x;\n            var a = 0;\n            for (var cy = 0; cy < side; cy++) {\n                for (var cx = 0; cx < side; cx++) {\n                    var scy = y + cy - halfSide;\n                    var scx = x + cx - halfSide;\n                    if (scy >= 0 && scy < sh && scx >= 0 && scx < sw) {\n                        var srcOff = scy * sw + scx;\n                        var wt = weights[cy * side + cx];\n                        a += mask[srcOff] * wt;\n                    }\n                }\n            }\n            maskResult[so] = a;\n        }\n    }\n    return maskResult;\n}\nexports.Mask = function (imageData) {\n    var threshold = this.threshold(), mask = backgroundMask(imageData, threshold);\n    if (mask) {\n        mask = erodeMask(mask, imageData.width, imageData.height);\n        mask = dilateMask(mask, imageData.width, imageData.height);\n        mask = smoothEdgeMask(mask, imageData.width, imageData.height);\n        applyMask(imageData, mask);\n    }\n    return imageData;\n};\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'threshold', 0, Validators_1.getNumberValidator(), Factory_1.Factory.afterSetFilter);\n"]},"metadata":{},"sourceType":"script"}