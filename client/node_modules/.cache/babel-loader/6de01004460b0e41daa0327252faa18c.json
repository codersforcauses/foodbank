{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/jun/foodbank/client/src/Components/Input/Utils/FieldMessage.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport { FieldControlContext } from './FieldControl';\n\nconst FieldMessage = ({\n  children,\n  className = '',\n  ...props\n}) => {\n  _s();\n\n  const {\n    error,\n    touched\n  } = useContext(FieldControlContext);\n  const errorClass = 'text-sm text-red';\n  const messageClass = 'text-sm text-dark-grey';\n  return /*#__PURE__*/_jsxDEV(\"span\", { ...props,\n    className: [error && touched && !props.description ? errorClass : messageClass, className].join(' '),\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FieldMessage, \"nk6RdJwYbefbFt3TAiySoFc5loA=\");\n\n_c = FieldMessage;\nexport default FieldMessage;\n\nvar _c;\n\n$RefreshReg$(_c, \"FieldMessage\");","map":{"version":3,"sources":["/home/jun/foodbank/client/src/Components/Input/Utils/FieldMessage.tsx"],"names":["React","useContext","FieldControlContext","FieldMessage","children","className","props","error","touched","errorClass","messageClass","description","join"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,mBAAT,QAAoC,gBAApC;;AAOA,MAAMC,YAAyC,GAAG,CAAC;AACjDC,EAAAA,QADiD;AAEjDC,EAAAA,SAAS,GAAG,EAFqC;AAGjD,KAAGC;AAH8C,CAAD,KAI5C;AAAA;;AACJ,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAqBP,UAAU,CAACC,mBAAD,CAArC;AACA,QAAMO,UAAU,GAAG,kBAAnB;AACA,QAAMC,YAAY,GAAG,wBAArB;AAEA,sBACE,qBACMJ,KADN;AAEE,IAAA,SAAS,EAAE,CAACC,KAAK,IAAIC,OAAT,IAAoB,CAACF,KAAK,CAACK,WAA3B,GAAyCF,UAAzC,GAAsDC,YAAvD,EAAqEL,SAArE,EAAgFO,IAAhF,CAAqF,GAArF,CAFb;AAAA,cAIGR;AAJH;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CAjBD;;GAAMD,Y;;KAAAA,Y;AAmBN,eAAeA,YAAf","sourcesContent":["import React, { useContext } from 'react'\nimport { FieldControlContext } from './FieldControl'\n\ninterface FieldMessageProps {\n  className?: string\n  description?: boolean\n}\n\nconst FieldMessage: React.FC<FieldMessageProps> = ({\n  children,\n  className = '',\n  ...props\n}) => {\n  const { error, touched } = useContext(FieldControlContext)\n  const errorClass = 'text-sm text-red'\n  const messageClass = 'text-sm text-dark-grey'\n\n  return (\n    <span\n      {...props}\n      className={[error && touched && !props.description ? errorClass : messageClass, className].join(' ')}\n    >\n      {children}\n    </span>\n  )\n}\n\nexport default FieldMessage\n"]},"metadata":{},"sourceType":"module"}