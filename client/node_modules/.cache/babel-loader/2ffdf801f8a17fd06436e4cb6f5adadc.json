{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/jun/foodbank/client/src/Pages/Game/index.tsx\",\n    _s = $RefreshSig$();\n\n/* eslint-disable react-hooks/exhaustive-deps */\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\nimport AnimatedNumber from 'animated-number-react';\nimport Konva from 'konva';\nimport * as React from 'react';\nimport { allFoods, backgrounds, getAndRemoveItem } from './helper';\nimport useGameAlert from './useGameAlert';\nconst TOTAL_FOOD = allFoods.length;\nconst width = window.innerWidth;\nconst height = window.innerHeight;\nconst stage = new Konva.Stage({\n  container: 'dank',\n  width: width,\n  height: height\n});\nconst layer = new Konva.Layer();\nstage.add(layer);\nconst tempLayer = new Konva.Layer();\nstage.add(tempLayer);\n\nconst drawBoard = () => {\n  const drawImage = ({\n    scale,\n    x,\n    y,\n    px,\n    py,\n    start,\n    end,\n    len,\n    name\n  }) => function () {\n    const group = new Konva.Group({\n      x,\n      y,\n      clipFunc: function (ctx) {\n        ctx.beginPath();\n        ctx.moveTo(px, py);\n        ctx.arc(px, py, len, start, Math.PI - end, false);\n      }\n    });\n    const options = {\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      image: this,\n      name,\n      scaleX: scale,\n      scaleY: scale\n    };\n    const konvaImage = new Konva.Image(options);\n    group.add(konvaImage);\n    layer.add(group);\n    layer.draw();\n  };\n\n  backgrounds.forEach(b => {\n    const image = new Image();\n    image.onload = drawImage(b);\n    image.src = b.src;\n  });\n};\n\nconst categorisedCharNames = [];\n\nconst Game = () => {\n  _s();\n\n  var _currentCharacter$tar2, _currentCharacter$tar3;\n\n  const [currentCharacter, setCurrentCharacter] = React.useState();\n  const [remainingCharacters, setRemainingCharacters] = React.useState(allFoods);\n  const {\n    error,\n    success,\n    finishGame\n  } = useGameAlert();\n\n  const getAndUpdateRandomChar = () => {\n    // handle game end\n    let availableChars = remainingCharacters;\n\n    if (!remainingCharacters.length) {\n      finishGame();\n      setRemainingCharacters(allFoods);\n      availableChars = allFoods;\n    }\n\n    const [randomChar, updated] = getAndRemoveItem(availableChars, 'image');\n    setRemainingCharacters(updated);\n    if (!randomChar) return;\n    setTimeout(() => {\n      Konva.Image.fromURL(randomChar.image, function (image) {\n        console.log(image.attrs.image.height);\n        var imageHeight = image.attrs.image.height;\n        var scale = 0.05;\n\n        if (imageHeight < 2500 && imageHeight >= 2000) {\n          scale = 0.03;\n        } else if (imageHeight < 2000 && imageHeight >= 1500) {\n          scale = 0.1;\n        } else if (imageHeight < 1500 && imageHeight >= 1000) {\n          scale = 0.13;\n        } else if (imageHeight < 1000 && imageHeight >= 0) {\n          scale = 0.2;\n        }\n\n        console.log(scale);\n        image.setAttrs({\n          x: stage.width() / 1.4,\n          y: stage.height() / 2,\n          scaleX: scale,\n          scaleY: scale,\n          draggable: true,\n          name: randomChar.name,\n          foodGroup: randomChar.type\n        });\n        image.on('mouseover', function () {\n          document.body.style.cursor = 'pointer';\n        });\n        image.on('mouseout', function () {\n          document.body.style.cursor = 'default';\n        }); // add the shape to the layer\n\n        layer.add(image);\n        layer.add(image.attr.name);\n        layer.draw(); //console.log(image.attrs.image.height)\n      });\n    }, 0);\n  };\n\n  function getCurrentCharacter() {\n    var _currentCharacter$tar;\n\n    const {\n      name,\n      foodGroup\n    } = (currentCharacter === null || currentCharacter === void 0 ? void 0 : (_currentCharacter$tar = currentCharacter.target) === null || _currentCharacter$tar === void 0 ? void 0 : _currentCharacter$tar.attrs) || {};\n    return {\n      name,\n      foodGroup\n    };\n  }\n\n  const handleRemoveSuccess = ({\n    name,\n    foodGroup\n  }) => {\n    success({\n      name,\n      foodGroup\n    });\n    setCurrentCharacter(null);\n    getAndUpdateRandomChar();\n    categorisedCharNames.push(name);\n  };\n\n  const removeCharacter = (name, foodGroup, currentFoodGroup) => {\n    const found = stage.find(`.${name}`);\n\n    if (foodGroup === currentFoodGroup) {\n      if (found) {\n        found.each(f => {\n          f.destroy();\n          return f.hide();\n        });\n        handleRemoveSuccess({\n          name,\n          foodGroup\n        });\n      } else {\n        alert(`${name} is not found in the canvas GG ðŸ”¥`);\n      }\n    } else {\n      error({\n        name,\n        foodGroup\n      });\n    }\n  };\n\n  React.useEffect(getAndUpdateRandomChar, []);\n  React.useEffect(drawBoard, []);\n  React.useEffect(() => {\n    stage.on('dragstart', function (e) {\n      setCurrentCharacter(e);\n      e.target.moveTo(tempLayer);\n      layer.draw();\n    });\n    let previousShape;\n    stage.on('dragmove', function (evt) {\n      const pos = stage.getPointerPosition();\n      const shape = layer.getIntersection(pos);\n\n      if (previousShape && shape) {\n        if (previousShape !== shape) {\n          var _previousShape;\n\n          // leave from old targer\n          (_previousShape = previousShape) === null || _previousShape === void 0 ? void 0 : _previousShape.fire('dragleave', {\n            type: 'dragleave',\n            target: previousShape,\n            evt: evt.evt\n          }, true); // enter new targer\n\n          shape === null || shape === void 0 ? void 0 : shape.fire('dragenter', {\n            type: 'dragenter',\n            target: shape,\n            evt: evt.evt\n          }, true);\n          previousShape = shape;\n        } else {\n          previousShape.fire('dragover', {\n            type: 'dragover',\n            target: previousShape,\n            evt: evt.evt\n          }, true);\n        }\n      } else if (!previousShape && shape) {\n        previousShape = shape;\n        shape.fire('dragenter', {\n          type: 'dragenter',\n          target: shape,\n          evt: evt.evt\n        }, true);\n      } else if (previousShape && !shape) {\n        var _previousShape2;\n\n        (_previousShape2 = previousShape) === null || _previousShape2 === void 0 ? void 0 : _previousShape2.fire('dragleave', {\n          type: 'dragleave',\n          target: previousShape,\n          evt: evt.evt\n        }, true);\n        previousShape = undefined;\n      }\n    });\n    stage.on('dragend', function (e) {\n      const pos = stage.getPointerPosition();\n      const shape = layer.getIntersection(pos);\n\n      if (shape) {\n        var _previousShape3;\n\n        (_previousShape3 = previousShape) === null || _previousShape3 === void 0 ? void 0 : _previousShape3.fire('drop', {\n          type: 'drop',\n          target: previousShape,\n          evt: e.evt\n        }, true);\n      }\n\n      previousShape = undefined;\n      e.target.moveTo(layer);\n      layer.draw();\n      tempLayer.draw();\n    });\n    stage.on('dragenter', function () {\n      layer.draw();\n    });\n    stage.on('dragleave', function () {\n      layer.draw();\n    });\n    stage.on('dragover', function () {\n      layer.draw();\n    });\n  }, []);\n\n  const setOnDrop = () => {\n    stage.on('drop', e => {\n      const {\n        name,\n        foodGroup: currentFoodGroup\n      } = getCurrentCharacter();\n      if (!name || !currentFoodGroup || categorisedCharNames.some(categorised => categorised === name)) return;\n      const foodGroup = e.target.attrs.name;\n      removeCharacter(name, foodGroup, currentFoodGroup);\n      layer.draw();\n      tempLayer.draw();\n    });\n  };\n\n  React.useEffect(setOnDrop, [currentCharacter === null || currentCharacter === void 0 ? void 0 : (_currentCharacter$tar2 = currentCharacter.target) === null || _currentCharacter$tar2 === void 0 ? void 0 : (_currentCharacter$tar3 = _currentCharacter$tar2.attrs) === null || _currentCharacter$tar3 === void 0 ? void 0 : _currentCharacter$tar3.name]);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"flex justify-around\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-5xl font-thin\",\n        children: [\"Score:\", ' ', /*#__PURE__*/_jsxDEV(AnimatedNumber, {\n          value: TOTAL_FOOD - remainingCharacters.length - 1,\n          formatValue: value => value.toFixed(1)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-5xl font-thin\",\n        children: [\"Remaining Food: \", remainingCharacters.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 301,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Game, \"jJv3L/GfBG4Jb+TfvgRpXY55i54=\", false, function () {\n  return [useGameAlert];\n});\n\n_c = Game;\nexport default Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["/home/jun/foodbank/client/src/Pages/Game/index.tsx"],"names":["AnimatedNumber","Konva","React","allFoods","backgrounds","getAndRemoveItem","useGameAlert","TOTAL_FOOD","length","width","window","innerWidth","height","innerHeight","stage","Stage","container","layer","Layer","add","tempLayer","drawBoard","drawImage","scale","x","y","px","py","start","end","len","name","group","Group","clipFunc","ctx","beginPath","moveTo","arc","Math","PI","options","image","scaleX","scaleY","konvaImage","Image","draw","forEach","b","onload","src","categorisedCharNames","Game","currentCharacter","setCurrentCharacter","useState","remainingCharacters","setRemainingCharacters","error","success","finishGame","getAndUpdateRandomChar","availableChars","randomChar","updated","setTimeout","fromURL","console","log","attrs","imageHeight","setAttrs","draggable","foodGroup","type","on","document","body","style","cursor","attr","getCurrentCharacter","target","handleRemoveSuccess","push","removeCharacter","currentFoodGroup","found","find","each","f","destroy","hide","alert","useEffect","e","previousShape","evt","pos","getPointerPosition","shape","getIntersection","fire","undefined","setOnDrop","some","categorised","value","toFixed"],"mappings":"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","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\nimport AnimatedNumber from 'animated-number-react'\nimport Konva from 'konva'\nimport * as React from 'react'\nimport { allFoods, backgrounds, getAndRemoveItem, FoodImage } from './helper'\nimport useGameAlert from './useGameAlert'\n\nconst TOTAL_FOOD = allFoods.length\nconst width = window.innerWidth\nconst height = window.innerHeight\n\nconst stage = new Konva.Stage({\n  container: 'dank',\n  width: width,\n  height: height\n})\n\nconst layer = new Konva.Layer()\nstage.add(layer)\n\nconst tempLayer = new Konva.Layer()\nstage.add(tempLayer)\n\nconst drawBoard = () => {\n  const drawImage = ({ scale, x, y, px, py, start, end, len, name }: any) =>\n    function () {\n      const group = new Konva.Group({\n        x,\n        y,\n        clipFunc: function (ctx) {\n          ctx.beginPath()\n          ctx.moveTo(px, py)\n          ctx.arc(px, py, len, start, Math.PI - end, false)\n        }\n      })\n      const options = {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        image: this,\n        name,\n        scaleX: scale,\n        scaleY: scale\n      } as any\n\n      const konvaImage = new Konva.Image(options)\n\n      group.add(konvaImage)\n      layer.add(group)\n\n      layer.draw()\n    }\n\n  backgrounds.forEach(b => {\n    const image = new Image()\n    image.onload = drawImage(b)\n    image.src = b.src\n  })\n}\n\nconst categorisedCharNames: string[] = []\n\nconst Game: React.FC = () => {\n  const [currentCharacter, setCurrentCharacter] = React.useState<any>()\n  const [remainingCharacters, setRemainingCharacters] = React.useState<\n    FoodImage[]\n  >(allFoods)\n\n  const { error, success, finishGame } = useGameAlert()\n\n  const getAndUpdateRandomChar = () => {\n    // handle game end\n    let availableChars: FoodImage[] = remainingCharacters\n    if (!remainingCharacters.length) {\n      finishGame()\n      setRemainingCharacters(allFoods)\n      availableChars = allFoods\n    }\n    const [randomChar, updated] = getAndRemoveItem(availableChars, 'image')\n    setRemainingCharacters(updated)\n\n    if (!randomChar) return\n\n    setTimeout(() => {\n      Konva.Image.fromURL(randomChar.image, function (image: any) {\n        console.log(image.attrs.image.height)\n        var imageHeight = image.attrs.image.height\n        var scale = 0.05\n        if (imageHeight < 2500 && imageHeight >= 2000)  {\n          scale = 0.03\n        }\n        else if (imageHeight < 2000 && imageHeight >= 1500) {\n          scale = 0.1\n        }\n        else if (imageHeight < 1500 && imageHeight >= 1000) {\n          scale = 0.13\n        }\n        else if (imageHeight < 1000 && imageHeight >= 0) {\n          scale = 0.2\n        }\n        console.log(scale)\n        image.setAttrs({\n          x: stage.width() / 1.4,\n          y: stage.height() / 2,\n          scaleX: scale,\n          scaleY: scale,\n          draggable: true,\n          name: randomChar.name,\n          foodGroup: randomChar.type\n        })\n\n        image.on('mouseover', function () {\n          document.body.style.cursor = 'pointer'\n        })\n        image.on('mouseout', function () {\n          document.body.style.cursor = 'default'\n        })\n\n        // add the shape to the layer\n        layer.add(image)\n        layer.add(image.attr.name)\n        layer.draw()\n\n        //console.log(image.attrs.image.height)\n      })\n    }, 0)\n  }\n\n  function getCurrentCharacter(): {\n    name: string | undefined\n    foodGroup: string | undefined\n  } {\n    const { name, foodGroup } = currentCharacter?.target?.attrs || {}\n    return { name, foodGroup }\n  }\n\n  const handleRemoveSuccess = ({\n    name,\n    foodGroup\n  }: {\n    name: string\n    foodGroup: string\n  }) => {\n    success({ name, foodGroup })\n    setCurrentCharacter(null)\n    getAndUpdateRandomChar()\n    categorisedCharNames.push(name)\n  }\n\n  const removeCharacter = (\n    name: string,\n    foodGroup: string,\n    currentFoodGroup: string\n  ) => {\n    const found = stage.find(`.${name}`)\n    if (foodGroup === currentFoodGroup) {\n      if (found) {\n        found.each(f => {\n          f.destroy()\n          return f.hide()\n        })\n        handleRemoveSuccess({ name, foodGroup })\n      } else {\n        alert(`${name} is not found in the canvas GG ðŸ”¥`)\n      }\n    } else {\n      error({ name, foodGroup })\n    }\n  }\n\n  React.useEffect(getAndUpdateRandomChar, [])\n\n  React.useEffect(drawBoard, [])\n\n  React.useEffect(() => {\n    stage.on('dragstart', function (e) {\n      setCurrentCharacter(e)\n      e.target.moveTo(tempLayer)\n      layer.draw()\n    })\n    let previousShape: any\n    stage.on('dragmove', function (evt) {\n      const pos = stage.getPointerPosition() as any\n      const shape = layer.getIntersection(pos)\n      if (previousShape && shape) {\n        if (previousShape !== shape) {\n          // leave from old targer\n          previousShape?.fire(\n            'dragleave',\n            {\n              type: 'dragleave',\n              target: previousShape,\n              evt: evt.evt\n            },\n            true\n          )\n\n          // enter new targer\n          shape?.fire(\n            'dragenter',\n            {\n              type: 'dragenter',\n              target: shape,\n              evt: evt.evt\n            },\n            true\n          )\n          previousShape = shape\n        } else {\n          previousShape.fire(\n            'dragover',\n            {\n              type: 'dragover',\n              target: previousShape,\n              evt: evt.evt\n            },\n            true\n          )\n        }\n      } else if (!previousShape && shape) {\n        previousShape = shape\n        shape.fire(\n          'dragenter',\n          {\n            type: 'dragenter',\n            target: shape,\n            evt: evt.evt\n          },\n          true\n        )\n      } else if (previousShape && !shape) {\n        previousShape?.fire(\n          'dragleave',\n          {\n            type: 'dragleave',\n            target: previousShape,\n            evt: evt.evt\n          },\n          true\n        )\n        previousShape = undefined\n      }\n    })\n    stage.on('dragend', function (e) {\n      const pos = stage.getPointerPosition() as any\n\n      const shape = layer.getIntersection(pos)\n      if (shape) {\n        previousShape?.fire(\n          'drop',\n          {\n            type: 'drop',\n            target: previousShape,\n            evt: e.evt\n          },\n          true\n        )\n      }\n      previousShape = undefined\n      e.target.moveTo(layer)\n      layer.draw()\n      tempLayer.draw()\n    })\n\n    stage.on('dragenter', function () {\n      layer.draw()\n    })\n\n    stage.on('dragleave', function () {\n      layer.draw()\n    })\n\n    stage.on('dragover', function () {\n      layer.draw()\n    })\n  }, [])\n\n  const setOnDrop = () => {\n    stage.on('drop', (e: any) => {\n      const { name, foodGroup: currentFoodGroup } = getCurrentCharacter()\n      if (\n        !name ||\n        !currentFoodGroup ||\n        categorisedCharNames.some(categorised => categorised === name)\n      )\n        return\n\n      const foodGroup = e.target.attrs.name\n\n      removeCharacter(name, foodGroup, currentFoodGroup)\n      layer.draw()\n      tempLayer.draw()\n    })\n  }\n\n  React.useEffect(setOnDrop, [currentCharacter?.target?.attrs?.name])\n\n  return (\n    <main>\n      <header className='flex justify-around'>\n        <h2 className='text-5xl font-thin'>\n          Score:{' '}\n          <AnimatedNumber\n            value={TOTAL_FOOD - remainingCharacters.length - 1}\n            formatValue={(value: number) => value.toFixed(1)}\n          />\n        </h2>\n        <h2 className='text-5xl font-thin'>\n          Remaining Food: {remainingCharacters.length}\n        </h2>\n      </header>\n    </main>\n  )\n}\n\nexport default Game\n"]},"metadata":{},"sourceType":"module"}