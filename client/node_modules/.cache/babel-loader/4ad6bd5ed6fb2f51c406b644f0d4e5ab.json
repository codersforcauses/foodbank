{"ast":null,"code":"function ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport { transform, fromObject, translate, scale } from 'transformation-matrix';\nimport { TOOL_PAN, TOOL_AUTO, TOOL_ZOOM_IN, TOOL_ZOOM_OUT, MODE_IDLE, MODE_PANNING, MODE_ZOOMING } from '../constants';\nimport { resetMode, getSVGPoint, set } from './common';\nimport { onMouseDown, onMouseMove, onMouseUp } from './interactions';\nimport { isZoomLevelGoingOutOfBounds, limitZoomLevel } from './zoom';\n\nfunction getTouchPosition(touch, ViewerDOM) {\n  var _ViewerDOM$getBoundin = ViewerDOM.getBoundingClientRect(),\n      left = _ViewerDOM$getBoundin.left,\n      top = _ViewerDOM$getBoundin.top;\n\n  var x = touch.clientX - Math.round(left);\n  var y = touch.clientY - Math.round(top);\n  return {\n    x: x,\n    y: y\n  };\n}\n\nexport function onTouchStart(event, ViewerDOM, tool, value, props) {\n  if (isMultiTouch(event, props)) {\n    return onMultiTouch(event, ViewerDOM, tool, value, props);\n  }\n\n  if (event.touches.length !== 1) {\n    if ([MODE_PANNING, MODE_ZOOMING].indexOf(value.mode) >= 0) {\n      return resetMode(value);\n    } else if ([MODE_IDLE].indexOf(value.mode) >= 0) {\n      return value;\n    }\n  }\n\n  return onSingleTouch(event, ViewerDOM, tool, value, props, onMouseDown);\n}\nexport function onTouchMove(event, ViewerDOM, tool, value, props) {\n  if (isMultiTouch(event, props)) {\n    return onMultiTouch(event, ViewerDOM, tool, value, props);\n  }\n\n  if (!([MODE_PANNING, MODE_ZOOMING].indexOf(value.mode) >= 0)) {\n    return value;\n  }\n\n  return onSingleTouch(event, ViewerDOM, tool, value, props, onMouseMove);\n}\nexport function onTouchEnd(event, ViewerDOM, tool, value, props) {\n  if (!([MODE_PANNING, MODE_ZOOMING].indexOf(value.mode) >= 0)) {\n    return value;\n  }\n\n  var nextValue = shouldResetPinchPointDistance(event, value, props) ? set(value, {\n    pinchPointDistance: null\n  }) : value;\n\n  if (event.touches.length > 0) {\n    return nextValue;\n  }\n\n  return onSingleTouch(event, ViewerDOM, tool, nextValue, props, onMouseUp);\n}\nexport function onTouchCancel(event, ViewerDOM, tool, value, props) {\n  event.stopPropagation();\n  event.preventDefault();\n  return resetMode(value);\n}\n\nfunction hasPinchPointDistance(value) {\n  return typeof value.pinchPointDistance === 'number';\n}\n\nfunction shouldResetPinchPointDistance(event, value, props) {\n  return props.detectPinchGesture && hasPinchPointDistance(value) && event.touches.length < 2;\n}\n\nfunction isMultiTouch(event, props) {\n  return props.detectPinchGesture && event.touches.length > 1;\n}\n\nfunction onSingleTouch(event, ViewerDOM, tool, value, props, nextValueFn) {\n  var nextValue = event.touches.length === 0 ? set(value, {\n    mode: value.prePinchMode ? MODE_IDLE : value.mode,\n    prePinchMode: null\n  }) : value;\n  var touch = event.touches.length > 0 ? event.touches[0] : event.changedTouches[0];\n  var touchPosition = getTouchPosition(touch, ViewerDOM);\n\n  switch (tool) {\n    case TOOL_ZOOM_OUT:\n    case TOOL_ZOOM_IN:\n    case TOOL_AUTO:\n    case TOOL_PAN:\n      event.stopPropagation();\n      event.preventDefault();\n      return nextValueFn(event, ViewerDOM, tool, nextValue, props, touchPosition);\n\n    default:\n      return nextValue;\n  }\n}\n\nfunction onMultiTouch(event, ViewerDOM, tool, value, props) {\n  var _ViewerDOM$getBoundin2 = ViewerDOM.getBoundingClientRect(),\n      left = _ViewerDOM$getBoundin2.left,\n      top = _ViewerDOM$getBoundin2.top;\n\n  var x1 = event.touches[0].clientX - Math.round(left);\n  var y1 = event.touches[0].clientY - Math.round(top);\n  var x2 = event.touches[1].clientX - Math.round(left);\n  var y2 = event.touches[1].clientY - Math.round(top);\n  var pinchPointDistance = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n  var previousPointDistance = hasPinchPointDistance(value) ? value.pinchPointDistance : pinchPointDistance;\n  var svgPoint = getSVGPoint(value, (x1 + x2) / 2, (y1 + y2) / 2);\n  var distanceFactor = pinchPointDistance / previousPointDistance;\n\n  if (isZoomLevelGoingOutOfBounds(value, distanceFactor)) {\n    // Do not change translation and scale of value\n    return value;\n  }\n\n  if (event.cancelable) {\n    event.preventDefault();\n  }\n\n  var matrix = transform(fromObject(value), translate(svgPoint.x, svgPoint.y), scale(distanceFactor, distanceFactor), translate(-svgPoint.x, -svgPoint.y));\n  return set(value, set(_objectSpread(_objectSpread({\n    mode: MODE_ZOOMING\n  }, limitZoomLevel(value, matrix)), {}, {\n    startX: null,\n    startY: null,\n    endX: null,\n    endY: null,\n    prePinchMode: value.prePinchMode ? value.prePinchMode : value.mode,\n    pinchPointDistance: pinchPointDistance\n  })));\n}","map":{"version":3,"sources":["/home/jun/foodbank/node_modules/react-svg-pan-zoom/build-es/features/interactions-touch.js"],"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","value","configurable","writable","transform","fromObject","translate","scale","TOOL_PAN","TOOL_AUTO","TOOL_ZOOM_IN","TOOL_ZOOM_OUT","MODE_IDLE","MODE_PANNING","MODE_ZOOMING","resetMode","getSVGPoint","set","onMouseDown","onMouseMove","onMouseUp","isZoomLevelGoingOutOfBounds","limitZoomLevel","getTouchPosition","touch","ViewerDOM","_ViewerDOM$getBoundin","getBoundingClientRect","left","top","x","clientX","Math","round","y","clientY","onTouchStart","event","tool","props","isMultiTouch","onMultiTouch","touches","indexOf","mode","onSingleTouch","onTouchMove","onTouchEnd","nextValue","shouldResetPinchPointDistance","pinchPointDistance","onTouchCancel","stopPropagation","preventDefault","hasPinchPointDistance","detectPinchGesture","nextValueFn","prePinchMode","changedTouches","touchPosition","_ViewerDOM$getBoundin2","x1","y1","x2","y2","sqrt","pow","previousPointDistance","svgPoint","distanceFactor","cancelable","matrix","startX","startY","endX","endY"],"mappings":"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","sourcesContent":["function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { transform, fromObject, translate, scale } from 'transformation-matrix';\nimport { TOOL_PAN, TOOL_AUTO, TOOL_ZOOM_IN, TOOL_ZOOM_OUT, MODE_IDLE, MODE_PANNING, MODE_ZOOMING } from '../constants';\nimport { resetMode, getSVGPoint, set } from './common';\nimport { onMouseDown, onMouseMove, onMouseUp } from './interactions';\nimport { isZoomLevelGoingOutOfBounds, limitZoomLevel } from './zoom';\n\nfunction getTouchPosition(touch, ViewerDOM) {\n  var _ViewerDOM$getBoundin = ViewerDOM.getBoundingClientRect(),\n      left = _ViewerDOM$getBoundin.left,\n      top = _ViewerDOM$getBoundin.top;\n\n  var x = touch.clientX - Math.round(left);\n  var y = touch.clientY - Math.round(top);\n  return {\n    x: x,\n    y: y\n  };\n}\n\nexport function onTouchStart(event, ViewerDOM, tool, value, props) {\n  if (isMultiTouch(event, props)) {\n    return onMultiTouch(event, ViewerDOM, tool, value, props);\n  }\n\n  if (event.touches.length !== 1) {\n    if ([MODE_PANNING, MODE_ZOOMING].indexOf(value.mode) >= 0) {\n      return resetMode(value);\n    } else if ([MODE_IDLE].indexOf(value.mode) >= 0) {\n      return value;\n    }\n  }\n\n  return onSingleTouch(event, ViewerDOM, tool, value, props, onMouseDown);\n}\nexport function onTouchMove(event, ViewerDOM, tool, value, props) {\n  if (isMultiTouch(event, props)) {\n    return onMultiTouch(event, ViewerDOM, tool, value, props);\n  }\n\n  if (!([MODE_PANNING, MODE_ZOOMING].indexOf(value.mode) >= 0)) {\n    return value;\n  }\n\n  return onSingleTouch(event, ViewerDOM, tool, value, props, onMouseMove);\n}\nexport function onTouchEnd(event, ViewerDOM, tool, value, props) {\n  if (!([MODE_PANNING, MODE_ZOOMING].indexOf(value.mode) >= 0)) {\n    return value;\n  }\n\n  var nextValue = shouldResetPinchPointDistance(event, value, props) ? set(value, {\n    pinchPointDistance: null\n  }) : value;\n\n  if (event.touches.length > 0) {\n    return nextValue;\n  }\n\n  return onSingleTouch(event, ViewerDOM, tool, nextValue, props, onMouseUp);\n}\nexport function onTouchCancel(event, ViewerDOM, tool, value, props) {\n  event.stopPropagation();\n  event.preventDefault();\n  return resetMode(value);\n}\n\nfunction hasPinchPointDistance(value) {\n  return typeof value.pinchPointDistance === 'number';\n}\n\nfunction shouldResetPinchPointDistance(event, value, props) {\n  return props.detectPinchGesture && hasPinchPointDistance(value) && event.touches.length < 2;\n}\n\nfunction isMultiTouch(event, props) {\n  return props.detectPinchGesture && event.touches.length > 1;\n}\n\nfunction onSingleTouch(event, ViewerDOM, tool, value, props, nextValueFn) {\n  var nextValue = event.touches.length === 0 ? set(value, {\n    mode: value.prePinchMode ? MODE_IDLE : value.mode,\n    prePinchMode: null\n  }) : value;\n  var touch = event.touches.length > 0 ? event.touches[0] : event.changedTouches[0];\n  var touchPosition = getTouchPosition(touch, ViewerDOM);\n\n  switch (tool) {\n    case TOOL_ZOOM_OUT:\n    case TOOL_ZOOM_IN:\n    case TOOL_AUTO:\n    case TOOL_PAN:\n      event.stopPropagation();\n      event.preventDefault();\n      return nextValueFn(event, ViewerDOM, tool, nextValue, props, touchPosition);\n\n    default:\n      return nextValue;\n  }\n}\n\nfunction onMultiTouch(event, ViewerDOM, tool, value, props) {\n  var _ViewerDOM$getBoundin2 = ViewerDOM.getBoundingClientRect(),\n      left = _ViewerDOM$getBoundin2.left,\n      top = _ViewerDOM$getBoundin2.top;\n\n  var x1 = event.touches[0].clientX - Math.round(left);\n  var y1 = event.touches[0].clientY - Math.round(top);\n  var x2 = event.touches[1].clientX - Math.round(left);\n  var y2 = event.touches[1].clientY - Math.round(top);\n  var pinchPointDistance = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n  var previousPointDistance = hasPinchPointDistance(value) ? value.pinchPointDistance : pinchPointDistance;\n  var svgPoint = getSVGPoint(value, (x1 + x2) / 2, (y1 + y2) / 2);\n  var distanceFactor = pinchPointDistance / previousPointDistance;\n\n  if (isZoomLevelGoingOutOfBounds(value, distanceFactor)) {\n    // Do not change translation and scale of value\n    return value;\n  }\n\n  if (event.cancelable) {\n    event.preventDefault();\n  }\n\n  var matrix = transform(fromObject(value), translate(svgPoint.x, svgPoint.y), scale(distanceFactor, distanceFactor), translate(-svgPoint.x, -svgPoint.y));\n  return set(value, set(_objectSpread(_objectSpread({\n    mode: MODE_ZOOMING\n  }, limitZoomLevel(value, matrix)), {}, {\n    startX: null,\n    startY: null,\n    endX: null,\n    endY: null,\n    prePinchMode: value.prePinchMode ? value.prePinchMode : value.mode,\n    pinchPointDistance: pinchPointDistance\n  })));\n}"]},"metadata":{},"sourceType":"module"}